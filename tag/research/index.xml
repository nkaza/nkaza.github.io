<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>research | Nikhil Kaza</title>
    <link>https://nkaza.github.io/tag/research/</link>
      <atom:link href="https://nkaza.github.io/tag/research/index.xml" rel="self" type="application/rss+xml" />
    <description>research</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>© 2018-2025 Nikhil Kaza</copyright><lastBuildDate>Sat, 24 Aug 2019 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://nkaza.github.io/media/icon_hu1ca6a6912ef6c300619228a995d3f134_46128_512x512_fill_lanczos_center_3.png</url>
      <title>research</title>
      <link>https://nkaza.github.io/tag/research/</link>
    </image>
    
    <item>
      <title>Regional Employment Structure Using Labor Market Centrality Index</title>
      <link>https://nkaza.github.io/post/regional-employment-structure-using-labor-market-centrality-index/</link>
      <pubDate>Sat, 24 Aug 2019 00:00:00 +0000</pubDate>
      <guid>https://nkaza.github.io/post/regional-employment-structure-using-labor-market-centrality-index/</guid>
      <description>
&lt;script src=&#34;https://nkaza.github.io/post/regional-employment-structure-using-labor-market-centrality-index/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://nkaza.github.io/post/regional-employment-structure-using-labor-market-centrality-index/index_files/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://nkaza.github.io/post/regional-employment-structure-using-labor-market-centrality-index/index_files/pymjs/pym.v1.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://nkaza.github.io/post/regional-employment-structure-using-labor-market-centrality-index/index_files/widgetframe-binding/widgetframe.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;This post is based on joint work with &lt;a href=&#34;https://www.linkedin.com/in/dr-katherine-nesse&#34;&gt;Dr. Kate Nesse&lt;/a&gt;, and is &lt;a href=&#34;https://nkaza.github.io/publication/kaza-2019-aa&#34;&gt;published in the Internation Regional Science Review&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&#34;introduction&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Office of Managment and Budget (OMB) identifies Core Based Statistical Areas (CBSA) as collections of counties. These CBSA can be Metropolitan (MSA) or Micropolitan &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt;SA based on the population of the ‘core’ (&lt;span class=&#34;math inline&#34;&gt;\(\ge\)&lt;/span&gt; 50,000 or not). Within these Statistical Areas, counties can either be Central (contain all or a substantial portion of the urbanised area) or Outlying (employment interchange measure with the Central counties above 25%). In other words, the centrality of the county is defined by the urban population attributes of the county rather than its relative location in the commuting network, whereas Outlying defined in relation to the Central counties. In 2015, a vast majority of the counties within CBSA are considered Central; only 29% of the counties are Peripheral/Outlying. This is even more stark within &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt;SAs where only 14% are considered Peripheral. CBSAs are predominantly dominated by the Central counties; they account for 92.5% of the CBSA population. These Central counties are crucial to the delineation of these statistical regions and encompass the economic core of the country.&lt;/p&gt;
&lt;p&gt;Table 1 Types of CBSAs and Counties in Conterminous United States. Source: OMB (2015)&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;County Type&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;CBSA Type&lt;/td&gt;
&lt;td&gt;Central&lt;/td&gt;
&lt;td&gt;Outlying&lt;/td&gt;
&lt;td&gt;Total&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;MSA&lt;/td&gt;
&lt;td&gt;785&lt;/td&gt;
&lt;td&gt;451&lt;/td&gt;
&lt;td&gt;1,236&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;&lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt;SA&lt;/td&gt;
&lt;td&gt;569&lt;/td&gt;
&lt;td&gt;94&lt;/td&gt;
&lt;td&gt;663&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Total&lt;/td&gt;
&lt;td&gt;1,354&lt;/td&gt;
&lt;td&gt;545&lt;/td&gt;
&lt;td&gt;1,899&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;These definitions are built upon the assumption that a labor market is built around a central node. While this may have been the case historically, with our increasingly complex cities and multiplicity of transportation networks, contemporary cities have much more complex labor market networks and regional structures. In this work, we examine if a different approach to defining the core would affect our understanding of the economic geography of metropolitan United States. In particular, we are interested in understanding how the positionality of the nodes in the network illuminates our understanding of the regions.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;labor-market-centrality-index&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Labor Market Centrality Index&lt;/h2&gt;
&lt;p&gt;A k–core of an unweighted simple binary graph is its subgraph where all the nodes have at least degree &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;. This subgraph is obtained by iteratively removing nodes from the network whose degree is less than k until a stable set of vertices with the minimum degree is reached. A node in a network has a coreness index &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;, if it belongs to a &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;–core but not a &lt;span class=&#34;math inline&#34;&gt;\(k+1\)&lt;/span&gt;–core.&lt;/p&gt;
&lt;p&gt;This can be generalized to a directed network by focusing on the indegree; i.e. a &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;–core is the subgraph, where all nodes have an in-degree &lt;span class=&#34;math inline&#34;&gt;\(k\)&lt;/span&gt;. We can also generalize this concept to a weighted graph by using &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt;–core decomposition, where degree of the vertex is replaced by strength of the vertices (Eidsaa and Almaas 2013). If, the edge weight between nodes &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt; is denoted by a non-negative &lt;span class=&#34;math inline&#34;&gt;\(w_{ij}\)&lt;/span&gt;, then the strength of the vertex &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt;$is defined as&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[ s_i = \sum_{j \in N_i^-} w_{ij} \]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;where &lt;span class=&#34;math inline&#34;&gt;\(N_i^-\)&lt;/span&gt; is the in-neighborhood of &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; . The &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt;-core is a subgraph where the nodes have at least strength &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt;. As long as &lt;span class=&#34;math inline&#34;&gt;\(w_{ij} \in Z^+\)&lt;/span&gt;, we can replace an edge in the graph with &lt;span class=&#34;math inline&#34;&gt;\(w_{ij}\)&lt;/span&gt; multi-edges, and the decomposition of the graph by strength and degree are equivalent. We call this coreness index, the labor market centrality index when applied to commuting networks.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;img/illustration.jpg&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Illustration of network decomposition into core and periphery. Vertices are sized based on in-degree.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The s–core decomposition is illustrated in the above figure for directed graph with multiple edges including loops. The entire graph in the figure is part of 0-core. Nodes A and F have in-degree 0, and therefore are not part of the 1-core of the graph (subgraph induced by nodes B, C, D, E, G). Thus, the coreness of A and F is 0. In that 1-core of the subgraph, nodes D and G have in-degree 1. While they are not part of the 2-core of the graph, deleting them also renders B ineligible for 2-core. Thus, the coreness index of nodes B, D and G is 1. This process continues, till all nodes are assigned a coreness index. The vertices in the top 10 percentile of the index is classified as &lt;strong&gt;strong core&lt;/strong&gt; and in the upper quartile, but not in the upper decile as &lt;strong&gt;weak core&lt;/strong&gt;. The rest are periphery.&lt;/p&gt;
&lt;p&gt;We use the 2011–2015 &lt;a href=&#34;https://www2.census.gov/programs-surveys/demo/tables/metro-micro/2015/commuting-flows-2015/table1.xlsx&#34;&gt;county-to-county commuting flow data&lt;/a&gt; from the American Community Survey. For the sake of exposition, we limit our analysis to the conterminous United States consisting of 3,109 counties. 134,869 pairs of counties have non-zero commuters, representing 1.4% of the possible links; the network is relatively sparse, a testament to the continuing importance of geographic distance for economic integration. These links represent 142.5 million commuters, of which 72% commuted within the same county. When the above coreness index is computed on this dataset, we call it &lt;strong&gt;Labor Market Centrality Index&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;core-periphery-structure-of-the-united-states&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Core &amp;amp; Periphery Structure of the United States&lt;/h2&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:100%;height:480px;&#34; class=&#34;widgetframe html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;url&#34;:&#34;index_files/figure-html//widgets/widget_unnamed-chunk-1.html&#34;,&#34;options&#34;:{&#34;xdomain&#34;:&#34;*&#34;,&#34;allowfullscreen&#34;:false,&#34;lazyload&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;The Labor Market Centrality Index based on 2015 ACS commuting data (logrithmically transformed) is above for the conterminous United States. The results point to tightly connected large cores in the Northeastern United States that span Boston to Washington, D.C.; in Florida around Miami and Tampa; in Southern California around Los Angeles; and in Northern California around San Francisco (see Figure 2). As can be expected, there are also numerous other smaller cores around Miami, Atlanta, Chicago, Detroit, Seattle, Denver and other cities.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://nkaza.github.io/post/regional-employment-structure-using-labor-market-centrality-index/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;1152&#34; /&gt;&lt;/p&gt;
&lt;p&gt;280 counties are classified as Strong Core and 471 are classified as Weak Core. The rest are in the peripheral (see above maps). There are 92 distinct geographical clusters of Strong Core counties (defined by queen contiguity), with the biggest one comprising of 109 counties stretching from Portland, Maine to Northern Virginia. The second biggest cluster is the 28-county collection in California, from San Diego to Santa Rosa. The rest of the geographic clusters are comprised of 1 to 7 counties, with 65% of them being a single county. With the inclusion of weak core counties, the number of geographic clusters to increases to 108: 23 of the clusters are a collection of weak and strong core counties; 49 of the clusters are only comprised of weak core counties.&lt;/p&gt;
&lt;p&gt;There is one county (Sullivan, New York) that is not part any CBSA but belongs to a strong core. 11 outlying counties, as defined by OMB, belong to strong core. Similarly, two counties in New York, and one each in Connecticut, Pennsylvania and North Dakota are part of &lt;span class=&#34;math inline&#34;&gt;\(\mu\)&lt;/span&gt;SAs, but are part of strong core. More importantly, 638 central counties (OMB characterization) are not part of strong or weak core (see above maps). While these counties have urban populations above the thresholds specified, they have fewer commuters both to other nodes as well as to themselves, implying a comparatively weak local and regional economy. These disagreements in classifications provide a productive starting point to analyze the role of ‘small’ non-urban counties in the regional economy as well as large urban counties that are experiencing economic stagnation and decline.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;why-bother&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Why Bother?&lt;/h2&gt;
&lt;p&gt;To see why this classification may be more useful, it is illustrative to see changes in the employment pre and post-recession in different types of counties (See figure below). While the Weak Core counties grew (in terms of number of jobs) roughly at the same rate as the Strong Core counties pre-recession (2001-2008), the recovery in the post-recession has been twice as strong in the Strong Core counties in the post-recession. The recovery seems to have bypassed the Periphery counties; while they grew at a healthy 3% before the recession, they contracted by 0.5% after the recession. In part, these numbers can be explained due the spatial sorting of specializations and the changing nature of the economy. However, these distinctions are not as stark, if we use the Central and Outlying distinctions of OMB. Central counties (on average) marginally grew faster compared to Outlying counties (1.6% vs. 0.63%) during the post-recession, even while they had similar growth rates pre-recession (6.75 vs. 6.45). However, Central counties with MSA significantly outpaced Central counties within µSA in post-recession recovery (4.3% vs. -0.84%). This, together with the specialization in service industries indicates that it is not the population size of the county that is related to the economy but rather its place in the regional network. We do not make any claims as to the causal relationship between the position in the network and the economic growth.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://nkaza.github.io/post/regional-employment-structure-using-labor-market-centrality-index/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusions&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Conclusions&lt;/h2&gt;
&lt;p&gt;There are many ways to understand human settlements. In this paper, we looked at the regional structure from a network perspective. We found that how a county functions within the network of human settlement across the continental US is based on population and economic activity. Our typology reflects economic dimensions in addition to population and density.&lt;/p&gt;
&lt;p&gt;Metropolitan regions are formed around economic activity and therefore reflect economic centers but existing typologies do not characterize the strength and nature of the regional economy well. Focusing on the role of the county in the network through commute patterns illuminates not just how central a county is in the labor market but also broadly demonstrates the strength of the economy. This is independent of the size of the population. Although there is some relationship between the size of the population and the size of the economy, there were some small counties with a lot of commute flows and large counties that had very little commuting. Categorizing counties based on their function in the network of human settlements is a useful way to understand the integration of population and economy. It shares some similarities with other typologies focused on commuting flows. However, it has the unique feature of reflecting the economic strength of the region in a more dynamic way than other categorization and indices.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>A compactness index for urban patterns</title>
      <link>https://nkaza.github.io/post/a-compactness-index-for-urban-patterns/</link>
      <pubDate>Wed, 24 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://nkaza.github.io/post/a-compactness-index-for-urban-patterns/</guid>
      <description>
&lt;script src=&#34;https://nkaza.github.io/post/a-compactness-index-for-urban-patterns/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://nkaza.github.io/post/a-compactness-index-for-urban-patterns/index_files/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://nkaza.github.io/post/a-compactness-index-for-urban-patterns/index_files/pymjs/pym.v1.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://nkaza.github.io/post/a-compactness-index-for-urban-patterns/index_files/widgetframe-binding/widgetframe.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://nkaza.github.io/post/a-compactness-index-for-urban-patterns/index_files/plotly-binding/plotly.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://nkaza.github.io/post/a-compactness-index-for-urban-patterns/index_files/typedarray/typedarray.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://nkaza.github.io/post/a-compactness-index-for-urban-patterns/index_files/jquery/jquery.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://nkaza.github.io/post/a-compactness-index-for-urban-patterns/index_files/crosstalk/css/crosstalk.min.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://nkaza.github.io/post/a-compactness-index-for-urban-patterns/index_files/crosstalk/js/crosstalk.min.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://nkaza.github.io/post/a-compactness-index-for-urban-patterns/index_files/plotly-htmlwidgets-css/plotly-htmlwidgets.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://nkaza.github.io/post/a-compactness-index-for-urban-patterns/index_files/plotly-main/plotly-latest.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://nkaza.github.io/post/a-compactness-index-for-urban-patterns/index_files/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://nkaza.github.io/post/a-compactness-index-for-urban-patterns/index_files/lightable/lightable.css&#34; rel=&#34;stylesheet&#34; /&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#shape-compactness&#34;&gt;Shape Compactness&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#multiple-polygons-holes-and-other-realities&#34;&gt;Multiple Polygons, Holes and Other Realities&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#moment-of-inertia&#34;&gt;Moment of Inertia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#urban-compactness-scores&#34;&gt;Urban Compactness Scores&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#limitations&#34;&gt;Limitations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#conclusions&#34;&gt;Conclusions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Urban sprawl is a &lt;a href=&#34;https://doi.org/10.1080/10511482.2001.9521426&#34;&gt;multi-dimensional phenomena&lt;/a&gt;. Chief among its characteristics are whether or not an urban area is fragmented (or pockmarked development) and if the urban area is contiguous but of uniformly low-density. In this post, I want to demonstrate the use of a relatively novel (but in some ways an age-old) indicator of urban form at a landscape level; Area Moment of Inertia.&lt;/p&gt;
&lt;p&gt;Quite a bit of the literature on compactness comes from Political Science, where folks are concerned the most about gerrymandering and how to create compact electoral districts. Chief among them are &lt;a href=&#34;https://digitalcommons.law.yale.edu/ylpr/vol9/iss2/6/&#34;&gt;Polsby and Popper (1991)&lt;/a&gt;, Schwartzberg (1965) and &lt;a href=&#34;https://www.jstor.org/stable/2109043&#34;&gt;Reock (1961)&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;shape-compactness&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Shape Compactness&lt;/h1&gt;
&lt;p&gt;There are many ways we can describe the compactness of a shape. But we need a standard against which we can measure it. For that, we can assume that in 2D space, circle is the most compact shape for a given area. Note the important points here 1) keeping the same dimensions (otherwise a point is the most compact) 2) we need to fix an attribute, area in this case (again if we didn’t, point would be the most compact).&lt;/p&gt;
&lt;p&gt;One way to define compactness of a shape is to divide the perimeter of the shape &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt; to the area &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; (Perimeter-Area ratio) and see how closely it matches up with similar indicator for a circle However, since units of &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; differ, it is often useful to use &lt;span class=&#34;math inline&#34;&gt;\(P^2/A\)&lt;/span&gt;. For a circle this quantity is &lt;span class=&#34;math inline&#34;&gt;\(4 \pi\)&lt;/span&gt;. So an index of compactness that normalised to a circle might be&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[ \frac{4 \pi A}{P^2} \]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;This is known Polsby-Popper index, though the origins of this idea are much older. See Haggett et.al (1977) for some older references. The index is &lt;span class=&#34;math inline&#34;&gt;\((0,1]\)&lt;/span&gt; with the least compact areas taking on values closer to 0.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;img/glossary-compactness.png&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;&lt;em&gt;source: &lt;a href=&#34;https://www.azavea.com/blog/2016/07/11/measuring-district-compactness-postgis/&#34; class=&#34;uri&#34;&gt;https://www.azavea.com/blog/2016/07/11/measuring-district-compactness-postgis/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Another way to recover the above indicator is to take the ratio of perimeters, with the numerator being the perimeter of the most compact shape possible for the given area &lt;span class=&#34;math inline&#34;&gt;\(A\)&lt;/span&gt; and the denominator being the perimeter of the shape in question (focal shape). The perimeter of the circle is &lt;span class=&#34;math inline&#34;&gt;\(2 \sqrt{\pi A}\)&lt;/span&gt;. It is straightforward to notice that this is related to the above perimeter-area ratio and differ only by a square root (a non-linear but monotonic transformation). This also how Schwartzberg’s index is related to Polsby-Popper index.&lt;/p&gt;
&lt;p&gt;One disadvantage of the above method is perimeter is very sensitive to the errors in the boundary. In particular, if the boundary becomes more rugged (technical term), the perimeter dramatically increases without concomitant increase in area.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;img/Von_Koch_curve.gif&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;&lt;em&gt;The famous Koch curve. Perimeter increases dramatically with each iteration, but only marginal changes in the area&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Reock index is slightly different. It relies on the notion of circumscribing polygon of the focal shape. We can use a convex hull or a minimum bounding circle as this polygon. The idea is to take the ratio between the area of the focal shape and the circumscribing polygon, because clearly perimeter is susceptible to fractalisation issues.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;img/mbc.png&#34; width=&#34;30%&#34; /&gt;&lt;img src=&#34;img/ch.png&#34; width=&#34;30%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Source: &lt;a href=&#34;https://fisherzachary.github.io/public/r-output.html&#34; class=&#34;uri&#34;&gt;https://fisherzachary.github.io/public/r-output.html&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;There area of circumscribing circle is proportional to&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\max_{p_i, p_j \in P} \|p_i - p_j\|\]&lt;/span&gt;
where &lt;span class=&#34;math inline&#34;&gt;\(p_i\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(p_j\)&lt;/span&gt; are points on the perimeter &lt;span class=&#34;math inline&#34;&gt;\(P\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;This property makes the Reock index very sensitive to the elongated shapes and the direction of elongation. Think about the circumscribing circle of the following three shapes.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;img/reock_issues.png&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Source: Polsby and Popper (1991)&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This is a particular problem for geospatial datasets because shapes are distorted by different projections differently and in different parts of the world based on underlying assumptions. The convex hull approach slightly mitigates this problem.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;multiple-polygons-holes-and-other-realities&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Multiple Polygons, Holes and Other Realities&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;img/multipolygons.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Until now, we have primarily dealt with single shapes, albeit with fuzzy boundaries. Often, we encounter disjointed polygons that belong to the ‘same feature’, polygons with holes and other esoterica. These shapes are often a result of complicated geoprocessing operations such as unions, dissolves and intersections or mapping/surveying errors. None of the above metrics fare particularly well in describing the compactness, when confronted with these realities.There is little agreement about simple concepts like perimeters, areas and circumscribing polygons.&lt;/p&gt;
&lt;div id=&#34;a-partial-solution&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;A partial solution&lt;/h2&gt;
&lt;p&gt;One way to mitigate against these issues and also to reduce computational burden would be to deal with the rasters. While fuzziness of boundaries are still an issue, perimeters of ‘raster shapes’ cannot get arbitrarily large for a given resolution (cell size). The other is to rely on Moment of Inertia (MI) to account for multiple polygons and holes. Tightrope walkers rely on this idea to prevent rotating around (falling from) the rope. See &lt;a href=&#34;http://ciebasinga.com/&#34;&gt;Tatiana-Mosio-Bongonga&lt;/a&gt; in Paris above!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;moment-of-inertia&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Moment of Inertia&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://doi.org/10.1080/13658816.2012.752093&#34;&gt;Li et.al (2013)&lt;/a&gt; proposed ratios of area moment of inertia (MI). Two features of this measure makes it particularly attractive. 1) MI is decomposable 2) Parallel Axis Theorem.&lt;/p&gt;
&lt;p&gt;If &lt;span class=&#34;math inline&#34;&gt;\(I_z\)&lt;/span&gt; is the MI of passing through an axis at centre, the MI at an axis &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; away from the centre is &lt;span class=&#34;math inline&#34;&gt;\(I_z + Ad^2\)&lt;/span&gt;. Furthermore, for a collection of areas &lt;span class=&#34;math inline&#34;&gt;\(K\)&lt;/span&gt;, the MI is &lt;span class=&#34;math inline&#34;&gt;\(\sum_{k \in K} (I_z^k + A_k d_k^2)\)&lt;/span&gt;, where &lt;span class=&#34;math inline&#34;&gt;\(d_k\)&lt;/span&gt; is the distance of each area from the overall centroid and &lt;span class=&#34;math inline&#34;&gt;\(I_z^k\)&lt;/span&gt; is the MI of the individual part w.r.t its own centroid.&lt;/p&gt;
&lt;p&gt;The MI for each square (assuming that the raster resolution is same in both x and y directions) with resolution/width &lt;span class=&#34;math inline&#34;&gt;\(s\)&lt;/span&gt; is &lt;span class=&#34;math inline&#34;&gt;\(s^4/6\)&lt;/span&gt;. Thus, the MI for the landscape is&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\sum_{i \in S} (\frac{s^4}{6} + d_i^2 s^2) \unicode{x1D7D9}_i\]&lt;/span&gt;
where &lt;span class=&#34;math inline&#34;&gt;\(\unicode{x1D7D9}_i = 1\)&lt;/span&gt; when the cell &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; belongs to the shape, 0 otherwise. &lt;span class=&#34;math inline&#34;&gt;\(d_i\)&lt;/span&gt; is the distance of cell to the centroid.&lt;/p&gt;
&lt;p&gt;The MI of the most compact shape, circle with the same area, is &lt;span class=&#34;math inline&#34;&gt;\(A^2/(2 \pi)\)&lt;/span&gt;. Thus.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[IMI := \frac{A^2}{2 \pi \sum_{i \in S} s^2 (\frac{s^2}{6} + d_i^2) \unicode{x1D7D9}_i } \]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Strictly speaking, it is hard to get a perfect circle fashioned out of a raster, so the IMI is always between &lt;span class=&#34;math inline&#34;&gt;\((0,1)\)&lt;/span&gt;ut for all practical purposes, this does not matter much.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;urban-compactness-scores&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Urban Compactness Scores&lt;/h1&gt;
&lt;p&gt;To look at urban compactness scores, I use the 2011 NLCD data. I select the urban landcover categories and remove the roads and other features that make the urban landscapes seem connected. See &lt;a href=&#34;https://nkaza.github.io/post/2018-07-01-urban-morphology-landscape-metrics/urban-morphology-landscape-metrics/&#34;&gt;other posts&lt;/a&gt; for more details. In particular, the landcover data is processed to eliminate roads, small stringy patches.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;img/durham.png&#34; style=&#34;width:50.0%;height:50.0%&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Urban landcover shown in black&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The urban compactness scores are shown in the following map.&lt;/p&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:100%;height:480px;&#34; class=&#34;widgetframe html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;url&#34;:&#34;index_files/figure-html//widgets/widget_unnamed-chunk-2.html&#34;,&#34;options&#34;:{&#34;xdomain&#34;:&#34;*&#34;,&#34;allowfullscreen&#34;:false,&#34;lazyload&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;It is not surprising that the more compact counties are urban areas. This is more clearly revealed in the following box plot. Large Central counties are substantially more compact that small metros or rural areas. But there is significant variation in the compactness of counties.&lt;/p&gt;
&lt;div id=&#34;htmlwidget-2&#34; style=&#34;width:672px;height:480px;&#34; class=&#34;plotly html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-2&#34;&gt;{&#34;x&#34;:{&#34;data&#34;:[{&#34;xy&#34;:[0.0084280330471034,0.0154470906054046,0.00509790001147783,0.0184707096104695,0.00524657453692178,0.00322977983691279,0.0254505541828533,0.0118521856893191,0.0144950291477921,0.0112715391740178,0.0178275658481665,0.00582336353108566,0.00888215023156369,0.0552075949862281,0.00494849718228209,0.0303073033118116,0.0130628117235484,0.0189290266404744,0.0470777421577641,0.00976176555408144,0.00296029981449831,0.00744552240102077,0.0105072704393464,0.0547129988183944,0.00641804404828835,0.0114020996250834,0.0228425536223999,0.00675059377097909,0.0159128082637823,0.0157178546872847,0.00588341132547599,0.0150397372212944,0.0304715580331428,0.0206063925094967,0.00757378541526033,0.0291621202900296,0.0199039691371075,0.0175239986211151,0.0400578841027961,0.00646197165427238,0.0169439130147358,0.00715291436265242,0.0070051298826718,0.0103558636057371,0.0420877581848431,0.0290763536246046,0.00850666615777242,0.0145050060486022,0.00429902789198847,0.00332469576076189,0.0149075151856493,0.0170351738799919,0.0073045653073942,0.0406668294567726,0.0117790958848265,0.0149050158226518,0.0110866717792172,0.00894362376888072,0.0116624102044587,0.0184853865065396,0.0130152012962706,0.0077481277657572,0.0418129307483177,0.019688186203482,0.0228161896434212,0.00763975238990772,0.00805105390669457,0.00123085933452592,0.00519845269442866,0.0463924770344089,0.0207875012877273,0.0307660772695231,0.00516689153166165,0.00364071634569375,0.015177109715152,0.0236999953068593,0.0224851659916449,0.0150768724438988,0.0216101296672544,0.0120243526643882,0.0262493292931313,0.00443920471574622,0.00343693306182073,0.0348869049685589,0.0506858582216061,0.0384017537625512,0.0126249874865295,0.00725974746542255,0.0249253998409285,0.0225968895508864,0.00740205244343834,0.013085060795995,0.0266095672469822,0.0350024671524791,0.0140176569072878,0.036902430930706,0.06201086995264,0.00587379000899961,0.0111752524160009,0.00924132510774291,0.01731942145512,0.0187188820792225,0.00883479468398462,0.00830792924044491,0.014946834951986,0.03054980883049,0.013072087209604,0.0112940593682523,0.0261999065657684,0.0521459466067321,0.00918931889024644,0.0134761529366448,0.025064064616975,0.0526951957124912,0.0188235898411081,0.00859507172020712,0.00373163722720878,0.0127765924327103,0.0297381160637958,0.0531239147942273,0.00358657190937491,0.00939747730698592,0.0198163647397585,0.0134548864719093,0.0147690288686191,0.00194700830347046,0.0236414244599867,0.00690305695174138,0.00206064686688453,0.0106432977432163,0.0185107855176701,0.00270575571985387,0.00413639680009917,0.0297253630311577,0.00191638533968033,0.00981775567866638,0.0330168179657859,0.00983193809054912,0.0195238975250961,0.0242376816906715,0.0207282119235428,0.00935614432495305,0.0092710075157603,0.00970120835601656,0.0135138842261677,0.0520662110773733,0.00831173367332676,0.0118380620905263,0.00510582494812427,0.00249756744341317,0.00728310311189188,0.00276426634871572,0.00884298403133493,0.00378073777478564,0.00358744330272007,0.0116084800400056,0.00972605580538258,0.00351567478096435,0.00300604362240978,0.00281791997538417,0.00746142159819756,0.00196557150030586,0.0121627553144004,0.00423087084382605,0.00516814460599596,0.00886883690889979,0.00225082851096876,0.00976993475535013,0.00329342269641456,0.00183576058514282,0.00753306558267353,0.00546420188874903,0.0072296150649222,0.000706325667965453,0.00853887815929716,0.0138280081867446,0.00145347850012984,0.0037006050879516,0.00550958101371576,0.00712765317669655,0.0169647014339244,0.0189160860282171,0.00377410973498442,0.00125378398109027,0.00302409976454042,null,0.00100860508039172,0.000917785188414924,0.00220647033813473,0.00403207793015524,0.00268989515286073,0.00678703761509562,0.00192384169661981,0.00428119185941246,0.00963706089286225,0.002607591162882,0.00234708905454332,0.0250245357869562,0.00342775306005101,0.0824410935707545,0.00629056589038278,0.0149825563201388,0.0112749775978419,0.00791683565486417,0.00729310929278716,0.0128231247260874,0.0212523655570994,0.00715549741506882,0.00645761674710589,0.00665491748027289,0.016306736063102,0.0179580465273454,0.00247143991387907,0.0743944546767314,0.00616788308866334,0.0128029158111093,0.000536440285915753,0.00329687695006974,0.00299188415670879,0.0040306369475213,0.0736458101021239,0.000576092803112496,0.0503042470257861,0.0192822192521032,0.0149813636717563,0.00339446944810595,0.00546058941383458,0.0213509312286861,0.00101403710651916,0.0051861777432973,0.0174801611975921,0.0171125238718893,0.0064327422967461,0.0725855942887612,0.00431949341341899,0.0018200376777588,0.0285272714458516,0.00565103653193428,0.0233748103092621,0.00184424301635695,0.00101982870280569,0.010766793324671,0.0486303103368372,0.0217780269389427,0.193099214692964,0.00418456369075684,0.00362460059701155,0.00639969961063914,0.00376436666506633,0.0165181064904684,0.00700846846680466,0.0186209618155608,0.0151714822753271,0.00703066599574835,0.00668472167665863,0.011389050670074,0.00251764212090905,0.0164471511914992,0.0417161864872403,0.00983891985836126,0.000946053011500499,0.00493601792020606,0.00091705841125949,0.0211420216197804,0.0078945382912899,0.00215985454240973,0.0064373599485527,0.00190504887974784,0.000845343490708951,0.0188298207086198,0.0149696592973072,0.00567734242808309,0.00618254602524765,0.0110405916576929,0.00674909145155265,0.0254746624749431,0.00158087339539428,0.0349760804863075,0.00476467827836447,0.0258146468595914,0.0124974695554042,0.00718875135451115,0.0330454803173419,0.0143693480050649,0.00768284613045652,0.0180166645747729,0.0261318583811735,0.0695104694285368,0.0150935386244359,0.0287464679559324,0.015813757077113,0.00906213496665017,0.0233187081143283,0.0245526674193603,0.0222867817907029,0.0323530131340134,0.0334109214116841,0.00441557494005494,0.00597859954321076,0.00729194948088858,0.0049753733721824,0.00469731939166714,0.0237452785849107,0.00546587639373342,0.0405404732248464,0.0123858744388187,0.0644772526337725,0.00670176268281274,0.00821877386971713,0.0318714313384259,0.0132117900120163,0.00716453276776849,0.00675840663787129,0.00780681970582811,0.0473241634290009,0.00419551999489475,0.0208019377028189,0.023152998968638,0.0049337373781266,0.02085288690154,0.000565182813126047,0.00783534979636747,0.00886452211772898,0.0445857556479059,0.00685989842147939,0.0340512940221204,0.00808192415118959,0.00552662163801295,0.0252233410182867,0.0160490529672058,9.86663038567264e-05,0.0362757509380091,0.000194705777102973,0.00268708334597529,0.00236178092573513,0.0108022276659065,0.0129127647178026,0.0156268604897462,0.00959172501540984,0.0182636581719465,0.0102709057965107,0.0101007183427703,0.0104364700758739,0.0290752749147836,0.0297726827083384,0.00595740232666953,0.012494476283724,0.0149662845805511,0.0110547311507242,0.0126297050373104,0.0128860381255946,0.0430772160470593,0.0285665129208912,0.0210714553726528,0.0298039895985741,0.0282301700637625,0.030773543715444,0.0152927368076467,0.0129743523325518,0.0163192477200579,0.00489831277106789,0.0187783295271421,0.00640152434944854,0.0265344371172335,0.00507421690229777,0.00551577885853473,0.0282152765763712,0.0292057626183517,0.0138925545188412,0.0114218122914656,0.037924756654218,0.0112160463267408,0.0265450489579342,0.01253859993983,0.0265617912620508,0.0025731859180596,0.00698415387537782,0.0182940388339467,0.00777086054100849,0.00533960074672289,0.00699140571422772,0.00582465576535906,0.0156436259187857,0.0426085713735993,0.00808060445936643,0.0129022928744901,0.00552692728008762,0.00788403148198432,0.0279890642165595,0.0146427440712423,0.00172188186937907,0.00856157356231715,0.0210898655878694,0.00804779902475626,0.0203169885621849,0.00723857513749085,0.00300457644936021,0.0134375906222416,0.012874566636287,0.00649744059388154,0.0317382523810941,0.000842661646345017,0.00110258450982146,0.0041794406449381,0.0186835869617762,0.0160640134138381,0.00539776759087374,0.00445887869760304,0.00603955428064994,0.0454393100838794,0.0137648851870506,0.013222208280283,0.0115374535309125,0.010752895342615,0.0140643713483583,0.00506105343502143,0.0122814629799604,0.0620645518044978,0.00436561795436396,0.0440184824138894,0.0224845268882544,0.0300386678442088,0.0211410363067878,0.0187103721006304,0.0280922342883858,0.0204063894533444,0.0165467338858069,0.0237945763289413,0.0216353107195136,0.0850109103238818,0.00997303314836757,0.000626844109952403,0.0140218177619973,0.0331417483330412,0.0145795964465086,0.0138814160842448,0.0201179433199957,0.00856736283834738,0.0101272808455053,0.010955203862374,0.00241455507101276,0.0134728854516459,0.0204043762347187,0.00541185021644461,0.0144981473749829,0.0153183940028131,0.00634881063872885,0.00235757771468467,0.0194043023555739,0.00392210995284002,0.00832975282976408,0.00991859164332596,0.0300448339209271,0.0171209604241105,0.0162609121707151,0.0172625904839684,0.0175023003471749,0.00548982713437125,0.00422052156295466,0.0170230375512057,0.0372144518614212,0.0012501466441453,0.0253113757822468,0.0301597082752507,0.133028624975795,0.0442156773872069,0.0324381041652115,0.0204669973953337,0.00842225855630073,0.0183595424562139,0.0109731139731084,0.0114183592261828,0.00603995938786761,0.00208554672943053,0.00370999079720577,0.00980337163413293,0.00212561365447238,0.0165955617863198,0.0106216623210678,0.00687798626063419,0.0190189732581806,0.0216893656691234,0.029428908108221,0.00596521686843831,0.0177771999021264,0.00220979156365146,0.00157574773775961,0.000219131170690356,0.00172494462140262,0.0181306932668405,0.00650514537829859,0.00204714688749581,0.00834023355669537,0.00395059301430948,0.00816663890516459,0.010355381199484,0.00647831203972428,0.00219923652191088,0.0114231360398407,0.00720580835908064,0.000898322651607156,0.0658714640050507,0.00312157844358568,0.00753760247761443,0.00555046536972833,0.0129442809242089,0.000899269901802543,0.00880904951511196,0.00214938639376068,0.00311360468387031,0.00228235441579755,0.0107195029672457,0.0190132937387471,0.0328964269600986,0.0018618172782905,0.00081955953362123,0.00249843987176188,0.00386105286876892,0.030670001217295,0.00838438069856756,0.00625099424574858,0.00107147186042564,0.00406904341531913,0.00619625794174939,0.0120458911568338,0.00257996397687322,0.00164991412626926,0.00668108217960577,0.00743109762476549,0.00271701977993525,0.00123711554011096,0.00133804571270008,0.00434451748131361,0.0040621941095475,0.0267454247159988,0.00412727498884262,0.00363078875190481,0.00479066191214079,0.00254752340333676,0.0020215325778769,0.00159395928626659,0.0189834784058759,0.00264523496491359,0.0182826413812449,0.013506475616925,0.00819391254943973,0.00564217837607965,0.00388979994693449,0.0227312325063694,0.00278277993046823,0.00822630776865813,0.00413917623857887,0.00498286527446163,0.0126621385880843,0.00209089025492313,0.010178326315896,0.00780949617212142,0.00622817522150552,0.00314101581963487,0.00439392258698616,0.00446415016359007,0.00183860230428018,0.00804398531692748,0.00148989851988251,0.0137275070198165,0.00357901958765262,0.0242683934129897,0.00655316661342238,0.00245508312444501,0.00524589451552981,0.00763172373217385,0.00754422449354386,0.0023588637703318,0.00148492892412468,0.00661545894518717,0.0231577527796852,0.0171433626147917,0.00376988778060069,0.00515322025224294,0.0123484028328575,0.00590597125443408,0.0061289319644558,0.0164278438565423,0.00149278297383232,0.00443326301824343,0.0477553007800092,0.00435406368999347,0.00378517360797589,0.00344547211395895,0.0322962676960893,0.00498411692373164,0.00375566471706091,0.0187720462184965,0.00588750614940611,0.011398592471287,0.0145042673875493,0.00430524010042472,0.0275243834319349,0.00300288658088733,0.0547029577636472,0.00906659579184115,0.0153744584452667,0.00631469242240584,0.0286325060114136,0.0228851758611419,0.0201328276902374,0.0207788083930822,0.00511027708417505,0.00166467729199109,0.0137174689882901,0.0108362829606304,0.0272738139564734,0.00722258740041922,0.00297148515751351,0.0160479956221093,0.00420288056612375,0.00451226732711824,0.00713311210320805,0.0102460879902858,0.0202210360418917,0.010586934919876,0.0161287687110216,0.0556676855641214,0.0160298823881294,0.0252608349030229,0.000791926262346753,0.0254508690035546,0.0494135981240724,0.000789647586785114,0.0165701877794761,0.0181282997533487,0.0040988220408661,0.0015403343767208,0.00116037417049835,0.00636607647497584,0.00102064513046264,0.0148147071130587,0.00430791962034914,0.0327378011444529,0.0151544780735141,0.017954230278573,0.0350148816873888,0.0164367091837413,0.00166230204597644,0.0192927499031624,0.00295378397459861,0.00882953749132538,0.0186942760264402,0.00308278908787023,0.0205174653211784,0.0108987162534199,0.00641689182175361,0.0077687224291907,0.00396246879225167,0.00766121314705986,0.00471429821784057,0.00419300701833376,0.0453918279675885,0.00655791048046228,0.0044219170044037,0.0305113636276683,0.0294959656862905,0.00511840307733748,0.0114542096382302,0.0178441616159959,0.0154445836317492,0.0234082874342566,0.00995987557398703,0.00602718342120416,0.00337889173093558,0.000571028082029095,0.0151544153942284,0.00770459365487136,0.00448787046029352,0.00271783035777274,0.0445615139929521,0.00848238032043139,0.00423492226808419,0.0168276665099988,0.0125189107991921,0.00917929924957279,0.00927401332418696,0.00317456839415461,0.00940397095091789,0.0311208211387283,0.0104152727724271,0.0260001846825789,0.00868751674578292,0.0135971651595976,0.00157403916732282,0.00657024175755398,0.0180192501995053,0.00708974904577569,0.0368761416943174,0.00791577799846086,0.00825115189147833,0.009759046451231,0.00258424875753821,0.00713465863428558,0.0405973130473875,0.025286802237145,0.0191291309615581,0.0420279886451576,0.00688324494786365,0.0216307169165816,0.00958811805885049,0.0128963165520241,0.00422306796831429,0.00879033314153834,0.00246908827217932,0.0026856332432782,0.0365379336413318,0.00882622224144885,0.027514383748681,0.00974559625165479,0.0148178927082025,0.00808173006925926,0.0117905521847499,0.012290196648481,0.0035737617757691,0.00535022202398538,0.000219623879860532,0.0161178535276752,0.00365675020716862,0.00932136256412924,0.0349983240984102,0.0202685587897928,0.0393696734358207,0.0206061210608465,0.00922320816694568,0.0191185021682696,0.0137354476145089,0.00938919773410943,0.00302352291384923,0.00127515636713832,0.00150581582206578,0.00861197936316677,0.00409495509041534,0.000383690634689834,0.0147556369824028,0.00340533575898494,0.00598393814110772,0.0129360717629924,0.00709049497066703,0.00203004067213244,0.00602195260970857,0.00974316341820175,0.00352183456387932,0.0179864237270296,0.000287084315188362,0.0240630103429301,0.00338974961418469,0.00226704604906992,0.0018392878642572,0.00301759998648759,0.0115075955085235,0.0120442011558797,0.00282606349009585,0.0101843886555146,0.00251723825815161,0.00835788262194605,0.0136031700717921,0.00213391584341467,0.0157185538401357,0.00420261458286668,0.00596453024018316,0.00751337850418634,0.00501960806659248,0.0141189234653366,0.00831694747443134,0.00200338444273635,0.0763415318415669,0.00405085296113627,0.00789029536922297,0.0338548082234858,0.00351812839947466,0.0171333228415279,0.020972570475206,0.0158606208916781,0.00264304160487752,0.0267280754756116,0.004887357706274,0.0249876651587899,0.0302164033465635,0.00917583956570865,0.033759135416952,0.0105576625725142,0.00835672278782485,0.0160323256878099,0.00314590308190436,0.0283792459459381,0.0198076264744867,0.0167438940682004,0.00771670674314279,0.0282469259027374,0.00461872682310382,0.00597683613536862,0.00886388623990848,0.0129162311354464,0.0140835442825854,0.0451419484132965,0.0124639215054197,0.0102246366362458,0.00277209246781022,0.0362163292194083,0.0102289402768072,0.00770572498685457,0.00448783520152966,0.0109873037155655,0.00395253855197743,0.00863052806983935,0.00604101333084903,0.0123184464210403,0.00752461678135411,0.00700619596551466,0.0012320066622451,0.0208572370942125,0.00596809120990961,0.00327619384507149,0.0151717421405479,0.0247683462226722,0.0259470127559432,0.010721292752869,0.0107835422883296,0.00668927188951451,0.0583925699019863,0.00837913896862949,0.414328141555188,0.0149953355393944,0.0298917525933107,0.0128946161668558,0.0261930509595494,0.0194813451233461,0.00259540459852055,0.0263382723731539,0.0104873667507592,0.0342878001900781,0.00465314224976868,0.00809376288342542,0.00929803280564819,0.00423681813945238,0.000236933284811386,0.0115780708887843,0.00133929194831195,0.017455121139575,0.0158463415621641,0.00731018407721094,0.00327673265779707,0.00383786467822441,0.00727701053435368,0.0181993356845883,0.0228155698375496,0.00830718561679396,0.0034373994573573,0.0254954755607928,0.00254044563289145,0.0133636152965123,0.00875173234415003,0.0128649574535272,0.0222073020458654,0.0156436437109685,0.00474713959420221,0.00128546136663784,0.00139999549016626,0.00466633513638173,0.0432282349584383,0.0457246441167979,0.00377736156976623,0.00420018150635577,0.00619070125887302,0.0186693545679792,0.0110098509404599,0.000553454259152839,0.0102906201032072,0.00644796777884786,0.00238075397016518,0.00566195438118452,0.00372593989066181,0.0132525975282352,0.0191712768230858,0.0115016641530891,0.00947359294730176,0.0273587355362138,0.00670022334649228,0.00361304298049442,0.00597945062879473,0.00328962995521015,0.0350593005928615,0.00506226756424067,0.00372348437398221,0.0135222559190823,0.00198015354352081,0.00981288303358702,0.0147597073093304,0.00108000135856009,0.014017610768368,0.0140947587379822,0.00912344094669819,0.00470221710012121,0.00189117604116049,0.0095693863613787,0.0112227628423482,0.00758913986163751,0.00259439161307171,0.00909202067470163,0.0256224833841737,0.00267360385570341,0.023396796750503,0.0110449413514796,0.0131694006550446,0.0762696159085723,0.00311673303043969,0.00518039955715137,0.00599461973178377,0.000726435092642216,0.000484517835071724,0.00311730391820829,0.00327321625656628,0.00439157823801454,0.010935151425668,0.00104039441121852,0.00481402265577015,0.00828018742336602,0.00488455242208936,0.00396672035427347,0.00481051492431622,0.00732694952450036,0.00165898947059277,0.00711593736272372,0.00139934695582058,0.000137347381738195,0.00511138023235442,0.00890741954169884,0.0527201453978845,0.00169377626128935,0.00329216519777185,0.000964301789170214,0.00458036905300209,0.0352572224197795,0.0122960559431862,0.0404117531048338,0.0285469584302996,0.00570753018378418,0.0055736011859445,0.0046031604500003,0.00992659481068726,0.0178084917427567,0.009020026356788,0.0215290175424605,0.00667602610984548,0.0275942541768566,0.0088848247197583,0.0124404760842771,0.0081897534202397,0.0041935121087924,0.000652363775024256,0.0142494518778854,0.00510051082280406,0.0339675277654813,0.00604726603299887,0.010108190849305,0.00890076383031642,0.0188678714567701,0.0036500070688613,0.0144584323004584,0.00473751421856278,0.0164463865847008,0.0292326848634865,0.000387785876644759,0.0089038680256367,0.00309845587945879,0.0134545957795656,0.0103656188726241,0.0201375977976006,0.0021345691686709,0.0145140957392399,0.00442484743253022,0.000896900489731101,0.0232796264255851,0.0143634706980234,0.0128910580730987,0.00723728943281981,0.0252764746415435,0.0060272881061419,0.031611364877114,0.00689404739631036,0.0115332986304143,0.0050903812942977,0.01095909057806,0.0104471154166608,0.00510866899497495,0.00112819144618232,0.000320422933220168,0.0148514676861757,0.00254973434237603,0.00244122999091768,0.00615551247174644,0.00254979399971603,0.0154351637827606,0.00242774990344082,0.00609191643165125,0.00920503060879637,0.0022893739014105,0.0464177893925988,0.0108523637357775,0.0184608594427427,0.0354021654649873,0.0114110268225222,0.00669193235648306,0.00612055255646313,0.0239701591281003,0.00271813870385728,0.00820268873096327,0.0130128323020345,0.00113741936826995,0.00103063109947546,0.0118158041511771,0.00496782496633831,0.00184402971169852,0.00753312755126935,0.0166258678032572,0.021130241071018,0.0240700126643727,0.00501835885489762,0.0083395296134331,0.051980983832843,0.00318635120202116,0.012586376005031,0.0168832759069806,0.016745622692311,0.00938344356630887,0.00743471507037232,0.00493305188149257,0.0225607457006455,0.000866678309470163,0.00720715318562332,0.00851185782629543,0.00480991219013797,0.00611194309503733,0.00216056367717345,0.0113030315245203,0.0119065940056039,0.0210199766606863,0.0138198905787993,0.0020393629882164,0.0233720356788842,0.00731141165595167,0.0343910315059146,0.00579699980840629,0.00620587837798394,0.0137464820497559,0.00955299203853579,0.0137021974225315,0.00301026727961828,0.00311121757771505,0.00656971269763842,0.0127039947173933,0.0131285794123878,0.00376602348518934,0.023218260954362,0.00723702258997874,0.029987217151321,0.0103769415261331,0.0205692975490482,0.0121501311361723,0.0308047625197323,0.0328011281530356,0.00847332463015947,0.528732895878406,0.00460863927438481,0.0488243722141017,0.0117185219781832,0.00610863928378311,0.0048492979132428,0.0273147771299502,0.00118163486364871,0.00617900892654857,0.0169147810843847,0.00525679356628536,0.008642407006791,0.00274266763302556,0.0287752230219239,0.0105937804375302,0.019564298854445,0.0251063356459477,0.00475628599921294,0.00884732667260201,0.0253941885800598,0.00861259088564808,0.0180796214630651,0.017468125576911,0.0101509333045396,0.0130320323854183,0.00386804266807824,0.00516465730818554,0.000723622217838289,0.00439757727599307,0.0139766968438265,0.00629881429366322,0.00410362145700873,0.0142025286693202,0.00811063967808849,0.000844068199492495,0.00177580148339498,0.0296051358249193,0.0199657522815039,0.00198703337492581,0.00452639891394851,0.0119971610126976,0.00795018675252136,0.00115340306468577,0.00341813567359327,0.00152917050679454,0.00165132953008927,0.00644837195217532,0.0571821704386285,0.00539090748230177,0.00311889676061907,0.00680894495393889,0.00144251374343859,0.0114930968746686,0.00486283013175415,0.00261132447339164,0.00989180131642589,0.012005123027309,0.00282591039014329,0.004786196942997,0.00379623186313497,0.00386594503182172,0.010064807439254,0.0090543460452729,0.00307381771977894,0.00308805718882259,0.0102371432138835,0.00476726114906586,0.0391152819396369,0.00876268342775384,0.00256462359570975,0.0162678811846406,0.0048882946930338,0.00132053753251525,0.0013477005437039,0.00473010977911922,0.0127611514547347,0.0423052521943362,0.00201472715420195,0.00655435084643962,0.00816542844583622,0.00934258613587238,0.0160908889614433,0.0152383657017823,0.00444753938286086,0.000880584395396725,0.0121241237862404,0.0221461505875745,0.00738106859498691,0.00239994990972783,0.00542625811345879,0.00219803189347858,0.00190437657433558,0.0217934285415345,0.00320598647446077,0.0108355341150023,0.0213033764979141,0.0369529749578121,0.0117451415571511,0.0281137623900019,0.0143760838626351,0.0165676665933468,0.00741775394161803,0.00686054734339107,0.0226311270085642,0.00757980059843785,0.00684540636232019,0.00256802999446757,0.00373369052596948,0.00978026804989394,0.0142866725511485,0.00713750696071718,0.0260487474597278,0.00385419566171188,0.0052588142083767,0.0334200782748541,0.0225088478893845,0.0116768250807754,0.00415212722325348,0.0143111043011531,0.0260361152323229,0.0201686281635515,0.00199616749533522,0.0300090062447292,0.00417450068579111,0.0141370993148833,0.00208628751310611,0.00599497435205147,0.00377902228588302,0.00963541426562523,0.0389078706950828,0.00888169580718114,0.00340543569849492,0.0329292343686448,0.0180405526500462,0.00351388318598514,0.0056000041246335,0.00175092108878198,0.00353000207443794,0.000148098333025448,0.000865985297098762,0.0453612937063745,0.00109989491124004,0.00840657917839477,0.00808404236652403,0.0305293873111122,0.00428038660645171,0.00602760459569932,0.00858016650167249,0.0093949756527686,0.0048754567174881,0.00612314176235029,0.0152977206654013,0.00935105534155041,0.00705577826976656,0.00789311538237446,0.0135341613861764,0.00331746125466981,0.00424953703018728,0.00840135631226561,0.0171445506821878,0.00107981034784887,0.0231494421595076,0.00668683047158001,0.000745875401564139,0.000941763336888563,0.0117328634629038,0.00615883915594969,0.00353508834932156,0.000894252945082987,0.0219052929348151,0.00872556491364828,0.00450023260023502,0.00249237873147382,0.0019383503817663,0.00425047336830088,0.0100095784732629,0.00419087117955278,0.00144203034407064,0.00563929982319083,0.00162202480429022,0.00127290928578977,0.0384542343536572,0.00222168068130461,0.00270423500447927,0.0156924026650221,0.00557454920422589,0.00465172601638361,0.0304696813332105,0.0157912355212275,0.0211959887413958,0.0110434814757009,0.00517366413974015,0.00331949796954959,0.0176171202554048,0.0012034971089356,0.0022925127440992,0.030149444106509,0.00680316178592095,0.00301377668666175,0.0155594318850151,0.0208201520919822,0.00225782071788287,0.0359450435609923,0.00155988840753193,0.0018890014672715,0.00212220813052373,0.0178893257461687,0.00519929340799259,0.0101176887355029,0.0111670300846218,0.000800804868738782,0.0127243797865792,0.00852313815853411,0.0124011929602483,0.338149463404382,0.00339540187427827,0.00357908182354748,0.0118145369538995,0.00692751740786967,0.0732043031595394,0.00339822625853601,0.00822178946903893,0.0130310291171189,0.00188240110527141,0.0264299000391937,0.005996527155493,0.0146865151571999,0.00375205552413476,0.000346706181980563,0.0153784414212404,0.0187910511189871,0.00272349815175347,0.00339149189353371,0.0111111561462161,0.000130958645815175,0.00419885600367238,0.000940128858110819,0.0126289062871488,0.030219736970452,0.0032917752098328,0.0324187867213293,0.0318794441814363,0.0264088764634932,0.0272192845350125,0.0377647293938066,0.0412974750568671,0.116993257627369,0.167976795006582,0.0119399179283699,0.022913414713986,0.00693244701484189,0.0794108881483891,0.0734883743357156,0.0113061923115148,0.0285737414082402,0.0470172259563271,0.0229387275443678,0.0152915587831932,0.00193512849157638,0.0260417867787538,0.0168030103342259,0.0610119262383588,0.0708243638043146,0.00224593285990996,0.0721778806507731,0.018618615099236,0.0522936593017535,0.0217840965547399,0.0169585129771026,0.0763799269519483,0.0292934913973255,0.0509879892888496,0.00593952274738585,0.055535465274439,0.0152796947909089,0.00425768292886708,0.00220669258860813,0.105898702895123,0.0374535099078011,0.0316182433561679,0.0570781953316055,0.0357383117732272,0.0611597386650635,0.0431883034565101,0.0102696032378891,0.133183882605136,0.1333610345796,0.0112451568112012,0.00456955352082607,0.0435208439258945,0.0046899652570467,0.0532332154614435,0.191367115264932,0.030577650047645,0.00764998012063939,0.0225535104333017,0.0665491436841801,0.0600091307882869,0.0169366576565433,0.0500185225188207,0.0252113005809375,0.16967793812381,0.0834108075788398,0.062084653024369,0.00311011349864584,0.173815996820516,0.0204659364183584,0.0126444662496957,0.0262742175519006,0.0206928383308745,0.0559866294386611,0.0119060875191882,0.0229410812039661,0.0206855144136312,0.130501872920591,0.00159732665007545,0.0281757938315359,0.0311829271708976,0.053132079281546,0.049152695283825,0.038302593693838,0.0519114512186998,0.0151007924755768,0.000148241768178586,0.0302432053719657,0.00598940757781714,0.0186135323604978,0.0190460027678912,0.0291145933746869,0.00964634969728062,0.00237856779741807,0.213315633125851,0.038140351304506,0.0544469140864782,0.0225672347891556,0.0117497132495944,0.0135491952377171,0.0626669244988991,0.0532488008675947,0.0771413164807084,0.0336746395210681,0.053159876340135,0.0209440933759177,0.0232958462801048,0.0462943711723398,0.0292919443646354,0.0565487036480432,0.00719564546880196,0.0108269671047664,0.0369374846471495,0.0579218491048585,0.0146470515839548,0.0183506897985635,0.00629937063829704,0.0551518503983743,0.0364527036143757,0.0751771873427056,0.0623245865902068,0.0370269446506732,0.0136532206484534,0.112620140455956,0.0182398369024032,0.0102807564237115,0.0042383919030406,0.0512170282709161,0.0645680567874125,0.0294571466051727,0.0743717798172104,0.141208560108372,0.0940141385732203,0.00501442162879781,0.0563839467074352,0.0305471731727524,0.0178382891855139,0.0219050449007719,0.00777753456532608,0.211890903343526,0.156483777924237,0.0388893458031759,0.00787443759178422,0.00589762654036981,0.108985307702837,0.0357342860293998,0.0388557309894739,0.0517995406906474,0.0690542359109352,0.0474558902983573,0.0227879470523298,0.0178190734352966,0.0550117881239726,0.0205698062341181,0.0105179554158752,0.0211102620612744,0.011151234541952,0.045242875795127,0.053835136460184,0.0581236802579707,0.0587892382296378,0.0488638024993068,0.0213375314731761,0.119864725003923,0.209782798856245,0.110470508464362,0.0125553489947122,0.0632598435408718,0.0558880550225778,0.0198129789163233,0.0550481079998446,0.0757600403520638,0.00488929441430907,0.00953815902504261,0.078264577014693,0.0661810695037668,0.00894204696535795,0.0326597926895889,0.0570324470446816,0.0160668680394466,0.102020108924113,0.00836344080673732,0.0487161999553323,0.0157078312464313,0.0956641799868505,0.0688095952994274,0.0146704300118376,0.0714444786387612,0.0703298167574607,0.0205432232221519,0.0225682190299533,0.00912872712368629,0.0107508400899094,0.0302680238823072,0.0322391521339063,0.00459366899680035,0.0296767195774122,0.0420327356864758,0.154212547472862,0.016714087470653,0.0300293769399309,0.00908169103314599,0.0500825346681377,0.211941382405709,0.0273411968957189,0.00208028103120925,0.0134685736555961,0.0115653696024324,0.0435287998983687,0.0904588516762389,0.00885656998299973,0.111131509691768,0.0444148284619471,0.0311440181259935,0.0539397079304829,0.0227783443299503,0.0148861509526473,0.161976003709782,0.0343918664429375,0.0520212184085605,0.0339315055429631,0.0346007527769007,0.00773925328547643,0.0443905674342349,0.161631051496137,0.00856447478201412,0.0508857057135658,0.122461751152962,0.0576902903639769,0.00313363666349129,0.0329124974748852,0.00852567773788037,0.0254232827413125,0.111232540138328,0.0200939811884324,0.0669683570002214,0.0374803684526984,0.0384498299248789,0.0192746547653072,0.0487041450560237,0.030214813366828,0.0128132497598677,0.0101304225475654,0.0682361998594219,0.00897855922409564,0.0486209631595973,0.0511724412821186,0.00253812199401212,0.00754503094454461,0.0118212254283803,0.0375147214723752,0.0246481364300026,0.0720701272673093,0.0435950766934624,0.0791898522005093,0.00118360972509902,0.0222160044344997,0.0310917584395396,0.0888066854073914,0.0121482223246301,0.0124176319112255,0.0166544370943485,0.00664599467373963,0.0311637596249045,0.000202360322402207,0.00128981170042837,0.0263978167573201,0.0937208330084374,0.0158159984007329,0.0424892128088349,0.0205935332521307,0.0802919846972533,0.0153554098238737,0.0184618785595636,0.0569347680603705,0.0755524771832119,0.00425081015339857,0.031840763268081,0.285332853066059,0.0557595333296402,0.0408227343584648,0.0901155784417754,0.062255852067254,0.155826806125957,0.01632097142977,0.0574556076285837,0.0853871009628324,0.00804248875378983,0.0206222898378271,0.0350969094724969,0.00773015754971795,0.0471606176306913,0.0196815440971254,0.00615717708477167,0.011308201383839,0.0111210327907952,0.0495787594896491,0.0217722413956695,0.0376972787057538,0.00122362100370371,0.0413630866566805,0.0495363031568523,0.0669822240993504,0.0196025270505031,0.0532653256284566,0.0396052173305931,0.00785377404109023,0.0154828499396934,0.0340198233815568,0.0438845455163741,0.0738437008747939,0.0123931188613956,0.0775556578292764,0.0468795820312598,0.0357081505630284,0.024781053530488,0.132615217613691,0.010223740220984,0.0138228635176187,0.059075763906513,0.156389684998245,0.00582974836167886,0.058370866044129,0.0246494964000689,0.0381574312608888,0.135495080955051,0.121125732042217,0.128792598205747,0.0902272259979193,0.00856772830683372,0.00547804541298232,0.017550657189889,0.0604517409436179,0.0246318119276342,0.0884675115101303,0.0122779037570585,0.000345542210198224,0.0346302902333672,0.103116160039798,0.0247947377164873,0.0442260179794765,0.0205687117275042,0.0564873915912454,0.0362430840940614,0.00546052570335717,0.00254682694916835,0.0490910963610936,0.0072812325109813,0.00243594755775119,0.0311592126808223,0.122382671221478,0.137741928818202,0.0367425867322744,0.0500846480985916,0.037885083149821,0.124700625485123,0.0355113921431939,0.0265919045534071,0.0323085458927808,0.00665322950752026,0.0145785169637718,0.0572801074148362,0.0665850493086309,0.0499127264744479,0.0470919272268694,0.0254803554762972,0.00591835804742606,0.0434252478957128,0.0239384472822123,0.0493925189299692,0.0106018671736648,0.0852916185786597,0.0966217629136051,0.00256644910524062,0.051487948014813,0.159803684164184,0.0257552501996734,0.0430423354085191,0.101371779934722,0.0307572715298204,0.0323966110417001,0.018325142189424,0.090991072688668,0.0158326944701269,0.0215070600194636,0.0316877665148747,0.0563963751705213,0.0342116970127232,0.115527895378336,0.0325123763105675,0.180976853126638,0.045430047683189,0.0317231717594642,0.14861324350653,0.0585214075846474,0.158791852592019,0.0680334269992411,0.0690982625086634,0.0458451518268187,0.0754844205344413,0.0669717184522731,0.0311405630600698,0.01606324264765,0.0368997602171724,0.0564297189314631,0.222357396496733,0.0823708231414337,0.00663661241909896,0.0225209759867622,0.0622487912436963,0.0351780504011076,0.00452210238854949,0.0743790046368233,0.0515635853835085,0.0496978170386916,0.0116738851373128,0.0250208769231015,0.0765408009913174,0.110502189100723,0.0773617774672364,0.0860496882747753,0.0220071087172662,0.11030500975878,0.109582647013956,0.0316610291251867,0.0562906981072075,0.024510261918958,0.0163653736726159,0.028716350870879,0.0042454064917572,0.0363911241944396,0.0258614065790009,0.0391996653224544,0.0490091965380914,0.0739515708753387,0.0124618134059785,0.0112769014344748,0.00844826340723413,0.0637158884560348,0.0274545833222741,0.020858199172306,0.0329473963121237,0.0964190034863041,0.0962607238921724,0.0630508536494144,0.185124163099044,0.0107221083414631,0.00942387552245939,0.130026409326841,0.00361150999853429,0.0542591721683204,0.0280553127983709,0.0447044999633996,0.0202922191270055,0.0288156823695523,0.0885997533168581,0.0117482949408317,0.00314342897201595,0.0263512383294847,0.0475091390398886,0.0953753233849194,0.0255315765625326,0.0559747651315008,0.00242303495361439,0.0551691514924736,0.0763565565719719,0.00572124470313029,0.079164273369474,0.00392283971608115,0.0228592071807249,0.0148268076380552,0.00130479153930205,0.0283598748312926,0.0798428493987214,0.00185113163710308,0.0043615886932047,0.00253912038008217,0.0557944811139876,0.0603150630416839,0.0158227893100255,0.108747722196643,0.0215434064002878,0.0269006981191459,0.079797664353027,0.00069435685355728,0.165986625837501,0.0339027785860352,0.00776240434570572,0.00459844059196383,0.0283097940201629,0.185908809217006,0.0784617255916804,0.124610330444641,0.0436354698054529,0.0882353934470416,0.0209867066342881,0.0644612897447062,0.0190747504032876,0.129319946242479,0.583828101022218,0.0469527540374912,0.0596016156159978,0.00692654568223113,0.0408037645928506,0.0425991054657845,0.0130247777071778,0.151332702721405,0.103823005726051,0.100468481607222,0.00142281837779818,0.0460183768017523,0.095882759818213,0.0495346847170149,0.0134182737161036,0.0294524954407325,0.0783571016010872,0.0625567598117909,0.00292187216122994,0.0210504476134924,0.115104399900969,0.0731735032647685,0.0284975093768958,0.00399328722096128,0.0322324279383929,0.0124407454076925,0.00767448757702313,0.0104126241020979,0.0329199079731963,0.025662760341617,0.0482969133649632,0.0221378928094517,0.00450881630525479,0.047607293713659,0.0489025970048753,0.0381823761139792,0.0153753858457456,0.0223679492458564,0.00120313000452942,0.0212193210111601,0.025014560252053,0.0550432599835345,0.0337751929101517,0.0452508131376276,0.00234110029013481,0.0185826076067959,0.049174992369814,0.0399739286209127,0.0211959619981913,0.0444943131730459,0.0213283438728904,0.0461724887138704,0.050658624734964,0.0516520435156261,0.0293827327989028,0.0107837801631845,0.0300797637424877,0.044559300537503,0.0203315181671971,0.043328998946879,0.0266116890596301,0.00269808597124491,0.0986361838873624,0.0406557419861958,0.00312597864804982,0.057022137948732,0.054603963052477,0.0123017549153859,0.012589889147851,0.031788357989158,0.00541050222168622,0.00218109054393143,0.069706086638771,0.0138125728300701,0.0363347461251686,0.0153571391790127,0.017842510784445,0.0591708826847736,0.19751860962002,0.0234920421834238,0.0663596315145312,0.0244837650791005,0.0395699096143281,0.0650594429513507,0.0141493108892336,0.0052187993080657,0.00511853372598566,0.0691620126952395,0.0245061904089682,0.0691690634541402,0.00993112797960149,0.0908293377634424,0.0692265695374703,0.0101356262542667,0.0376456671075097,0.0924024649137747,0.0653514378670279,0.0494751426717,0.00518924408784589,0.034958039751187,0.0322298763307486,0.0271354066292185,0.0203830246319876,0.0478693232939887,0.0866837793964278,0.0180258675967009,0.0403724377138297,0.0444989306124315,0.00445616336914181,0.0330039947101111,0.0105158334902539,0.03265367363625,0.0506678164832198,0.0129645403004265,0.0270715047548143,0.03485656369658,0.0245152838359262,0.0448355929993568,0.0948252230170414,0.00257622248912976,0.0425700644814993,0.00486632796369402,0.0566277571869431,0.0561347914936857,0.0292817817584449,0.07403867908678,0.0770639548573679,0.00843165824187474,0.0140150585808682,0.0624790181879375,0.00268722183923857,0.010725243007848,0.0256432766845672,0.00206090673740067,0.0197618957781728,0.508115407686825,0.0120596465760982,0.00558893126962288,0.0168121232845285,0.0560020076929758,0.319640643694881,0.338882180658664,0.154929936581867,0.262577323665033,0.00771350636026879,0.447886854521832,0.0264175231032181,0.122924738459033,0.300007572431843,0.0924430933133854,0.076697138347616,0.00489027196177418,0.00198204820459538,0.345649506866171,0.133136120188433,0.0501158333595386,0.0510944749755438,0.380274072973794,0.12325883951657,0.00970050555756825,0.00956106615887018,0.046896383102789,0.00958077200940916,0.169079978165306,0.539374333931258,0.112043967636844,0.0563995537476775,0.0518652262450322,0.227955375584448,0.00449054161135687,0.00424095774962972,0.00680297269053133,0.126751721360212,0.0182948527458082,0.130029760841597,0.0606848816051489,0.00290818025796811,0.00610948504174775,0.146991749635977,0.00230672346945705,0.0306043388734195,0.00345427836562541,0.150937987322193,0.00359435458688253,0.150035137216551,0.127594037927889,0.0438390363684026,0.0298214179877516,0.00253555102647767,0.0381167685002352,0.0109431467211477,0.0157821950061583,0.315000514439553,0.258625772254213,0.205002687826976,0.00455691442327824,0.0618846618597069,0.0910656510144528,0.247685256311365,0.0627553604149364,0.0104977424965246,0.0135075976532604,0.0056717019880673,0.119048207700509,0.754050963966132,0.0146170810668941,0.00347581520471547,0.0141039253943946,0.106782330482078,0.182803075199348,0.132228342836143,0.0551248311349549,0.137340835019306,0.00844359224520318,0.068867531547197,0.0690340128046036,0.0112352610606866,0.246849218336941,0.000781748017933652,0.00254112647016928,0.0251798893110899,0.02861410310961,0.033785265904646,0.0656146845361159,0.0109789854786489,0.301935628239345,0.21173495955685,0.00854625060523135,0.0334636448162049,0.0556893212173713,0.0080809971321225,0.0779028874469921,0.0061703969504704,0.0675692684594786,0.378432188984716,0.0107084030154293,0.0988635324153722,0.015283758550655,0.261337661110483,0.037046255956612,0.614289152483408,0.0185429502056156,0.206310612874189,0.0190665029489751,0.19890029595609,0.214660834361929,0.00943458967811214,0.102338587217812,0.1356655860607,0.0050007972247787,0.211368183512082,0.213087789073477,0.00586101485031536,0.0807338602589357,0.0417446291163763,0.0814495065455051,0.0163631632432094,0.00744996160917606,0.419020007188249,0.0149972877656907,0.0355222908291751,0.0901823145970396,0.0242839652287604,0.0775486646676986,0.054522906843655,0.0155122757296557,0.0582280873279099,0.0491206132350594,0.0746244659335903,0.153942524089328,0.0077525045050413,0.0148200656771773,0.0662472295445754,0.15361555313836,0.186529238623522,0.1063321367351,0.183215049592043,0.276441205418548,0.267801374707179,0.101391679987137,0.195632927447355,0.0645438199123103,0.34156791585784,0.161803585856867,0.0328069740040528,0.0515018298112749,0.0195837478171735,0.00543494396770359,0.00577973658570193,0.147724490617456,0.00544577112507948,0.0110176076826244,0.0362358633579155,0.0623163531998889,0.0813579394075282,0.00448226633772306,0.00856495768538771,0.00293880195519084,0.0830269797126506,0.349963966951716,0.00957957656362256,0.0757468964205783,0.00563466646287505,0.0832448247261456,0.0732676161134709,0.0627030042040591,0.045702477515853,0.270081723571462,0.258146953866434,0.00549373406563592,0.105408376894774,0.245446139763797,0.195683991797984,0.569810184889659,0.0066967425441826,0.0506488822229384,0.117605065486526,0.132766797252759,0.19307951693056,0.119511733805402,0.00995877676935392,0.037858646006552,0.0255445400704823,0.0868586083701629,0.0155098019394208,0.0239365957819901,0.058724184468002,0.0516676723466845,0.013374201585234,0.103639020181029,0.164623653538544,0.483345814887057,0.012581504436271,0.0551335657818788,0.0170478028328321,0.0115380682924632,0.00609448071856991,0.00679046985208243,0.0166485411003959,0.162817687911491,0.0277542925713021,0.152311856922428,0.164210020583859,0.0152646478219739,0.0324329859465202,0.207401236705468,0.0100924117850624,0.315354103105321,0.032729398840319,0.307938027858043,0.200555593091237,0.0213502521551005,0.00623507542669704,0.190513279966912,0.0561063609823908,0.0292196225270736,0.0195979392935918,0.044840267364182,0.167423554363272,0.203819590121423,0.0774263321113724,0.0157148896581135,0.0279032312274668,0.184151861285414,0.0158400598089627,0.0369874797486637,0.0751377738959928,0.0545252673634138,0.0666629111623293,0.641447266927362,0.110575103744806,0.332841690682462,0.011402736070988,0.0441931771863851,0.0384966082790935,0.0202623512361562,0.0904487180312194,0.0448123150579801,0.177280728838575,0.0206499933207449,0.0694718703020167,0.0338166282084321,0.0219401044950768,0.173299794004034,0.054327988496228,0.049278192291335,0.134613897387235,0.0871236381324901,0.153529333565813,0.0927003935859623,0.0320986909931368,0.0472398309702846,0.0298556046222653,0.265529355786094,0.120750756871473,0.129954157912993,0.109018620099635,0.118661147916032,0.00713079642190115,0.00392298754664339,0.274273558813126,0.0193022826153405,0.248027722425723,0.004746597821292,0.31189551164549,0.0812143967907779,0.135157299071271,0.0125052211132896,0.00596438811617347,0.0582514101991149,0.0581698924983444,0.195320400571178,0.128276869518643,0.0545351674125875,0.154201591258676,0.134081825429384,0.121187180804094,0.00417975914889542,0.0213814632310058,0.0158396611675784,0.00946002927098578,0.191523816500582,0.245140065446853,0.0289005515597766,0.0727545871483093,0.0163801507003299,0.162245718097845,0.0636957554986905,0.00400089874838832,0.00518227283269475,0.0347342828549174,0.0274723559960672,0.0142791557652665,0.00991650011179013,0.0100534221814206,0.123423368974813,0.0303933195480122,0.0183881661482958,0.197489726799106,0.193237062947117,0.196667313395974,0.125786945840141,0.228155196396817,0.00502763905812552,0.468021056392207,0.0251266566142735,0.0375414891056076,0.0209558878475427,0.00447615744074133,0.0408401740229461,0.00330646012162258,0.0343023667061353,0.0598435304620971,0.186200537303952,0.0134971602325366,0.155836448982939,0.140559530873757,0.0432066349068564,0.0196261046553457,0.0136558861008705,0.157326733759682,0.0460217030687184,0.233831677701018,0.229462584405467,0.0121923777754496,0.0330000298168733,0.311267965477277,0.014741971681585,0.697530398207887,0.151125914737025,0.135696159583817,0.0398760089552735,0.00201625927507353,0.125252536783376,0.0350598016668902,0.00639285384616113,0.164730009963185,0.153169690805441,0.0400780327808258,0.0187853014345756,0.104393961807165,0.0604877834761374,0.236103063786295,0.0836316277918213,0.108205890553162,0.00272763686000138,0.000931760348077422,0.0119301025622212,0.0632170964978387,0.0796497970945932,0.00993085808021633,0.0798129163904124,0.0117120815007845,0.010272488851289,0.220827703457593,0.00971802265817029,0.0236354932232007,0.0150043487145026,0.434017498309558,0.0589104531792744,0.443198273384498,0.0225399775152559,0.00371598464452448,0.0160365306311206,0.200206196417308,0.0756838613745517,0.49645728917691,0.0666012891560391,0.09610113990429,0.055926109785178,0.0172649219040808,0.421638253989609,0.119910746778643,0.00839872289171324,0.127626280074487,0.00883049745171093,0.104204480946057,0.0408777427262438,0.556707592518051,0.18912242447304,0.017521235927328,0.000283316047395289,0.837647759334905,0.243081922458719,0.00983743437597959,0.407041565936787,0.0358803394446226,0.00805059272971319,0.150434957679864,0.222273653625724,0.00308548490295212,0.49572994168703,0.0850722482880088,0.503480812031712,0.0193948867462471,0.165413164895917,0.0874363373540756,0.0374947664625392,0.110617743256067,0.204667863840662,0.0481953536500843,0.0117066214218742,0.528672251631204,0.13512680582457,0.0157021691251129,0.146652509061838,0.0155932312102263,0.0987970232768528,0.249540054069919,0.153765547892733,0.00571731228324266,0.0740523258490883,0.0234249696794174,0.0384739477917586,0.0182526172724274,0.0755943870197996,0.0640806427763665,0.193470010026627,0.0125086523354911,0.215896405483134,0.0107225109163267,0.538433478404791,0.0163771090098247,0.02434484698382,0.0308691178489854,0.0109980357202766,0.0277091503656205,0.252526412827144,0.352023520633809,0.38261126282313,0.174600582405569,0.0436635435325601,0.224658495558466,0.112876662282122,0.0521147006830147,0.00780615761375434,0.0567235668649047,0.0508571180807761,0.0659091335341335,0.385575340761226,0.0159398077568317,0.344918792991203,0.0700834524093448,0.0179693060789027,0.593855409129343,0.0411596401974768,0.507386324582489,0.0358915182899495,0.118135851432543,0.0337674388899541,0.0399985118837786,0.269120532481709,0.118413834337676,0.0169448649296885,0.0135397137903863,0.537497530245291,0.19169839155182,0.350703727680408,0.261455508693508,0.175203414745161,0.216868400475351,0.0236672239287355,0.0161453558267826,0.122135675383208,0.0612432317376735,0.32084911593958,0.604736856615072,0.00310246461308634,0.0264524205543692,0.0544901917856218,0.338348996339912,0.00797644385124585,0.319005002531941,0.0225113726499129,0.506995586384976,0.156926933582103,0.0024898110698947,0.485096713000058,0.0122555231891383,0.154783524813105,0.110203219983567,0.0186139852392919,0.00890897507342197,0.0746914411218915,0.122773052795845,0.134265143816653,0.0207246608415073,0.0755529483903962,0.0989512104380764,0.434039070848209,0.0292048537778826,0.347691406324503,0.0256173309385402,0.338539147406758,0.155916915175659,0.0281301274410766,0.0818362725837586,0.17105954191971,0.41879663740317,0.0154033422393523,0.0962133368864995,0.127180579681693,0.00557522846102012,0.018035580239334,0.1321407427648,0.0131162137206887,0.0353318166263878,0.0343942888128141,0.0711389330209281,0.0106891808869765,0.245342690130624,0.0634004974277821,0.0130929792056181,0.0551634151512175,0.00589305808564886,0.0960172857481,0.00210343563030605,0.105138740817397,0.309455968523437,0.126224122218275,0.314204210235656,0.218400696191406,0.54053535557626,0.111606467284462,0.229240373791955,0.0388172044399908,0.629649006237407,0.0232522109087298,0.0118759628064943,0.0723976564861553,0.743143513881245,0.0601397029598299,0.259291261477181,0.016326206608546,0.260712508860497,0.00993441954843723,0.00785995962634721,0.134837665150353,0.0851410410485266,0.000243983101299516,0.00927655611545524,0.0305524966938034,0.205761373636794,0.0080459334444801,0.002346392896207,0.153552694205262,0.0465827641772231,0.549538163211431,0.0564300092805289,0.196452333957608,0.212562727511725,0.00785815254963412,0.0552629180188432,0.14821741254554,0.254125644620743,0.0465346659427782,0.0830161012565463,0.529202874124159,0.160925289143293,0.64410180154166,0.0126119449199122,0.304036219926369,0.0982892060655468,0.00624476680278711,0.16473033880915,0.0256020545288218,0.249466463060202,0.0231063683859201,0.0153045092078391,0.00589067269201971,0.0143602587259716,0.311136193733262,0.0310963423039222,0.0256270870252925,0.00989379192578228,0.0411747956813123,0.121884953051562,0.436912199235339,0.00895036396558609,0.0641821653003903,0.219240667619516,0.132376970710904,0.111500058499463,0.0158156228982345,0.0471379459037284,0.0296523057962908,0.548319860451652,0.387584895128297,0.213491115829831,0.0806627092591095,0.564989913166432,0.0685307416549495,0.0778151365108795,0.472089354166673,0.0558737253146655,0.407720719162089,0.129527123807896,0.199085310068987,0.00124826556629986,0.130498631313067,0.177575319999598,0.100013854138475,0.205916850755517,0.0428469303108823,0.459418826595652,0.199558182421023,0.101295835257119,0.330641056924492,0.0385119395302371,0.0207894297985419,0.123985106385064,0.0414040072520623,0.0138112868512748,0.50728930843513,0.293055962319247,0.182450868219437,0.045530363231556,0.372739433125307,0.0463025536637316,0.162739891204882,0.149794739241986,0.0709319280040919,0.128059803916276,0.119408864551525,0.234521877906,0.0910563699792648,0.0532404485904534,0.286193923651171,0.00925006150877576,0.0339631266003556,0.0186233861896643,0.00477731325084265,0.111088215525687,0.452235980773574,0.04528930139297,0.0157128904731959,0.180460277254575,0.461021921224778,0.00796488928832782,0.000899409360366913,0.242869000620476,0.016260061636626,0.607624653766622,0.028600722714743,0.163163134701952,0.0212202417740608,0.209922637458576,0.196078604772585,0.0070699655439975,0.0448069898816688,0.0172596879902957,0.368967275335885,0.0388575848673421,0.115430455265354,0.0276555980932937,0.00783873037364341,0.243891690123531,0.256620981134131,0.135096784612145,0.0254978075509543,0.552776838102299,0.0166740679120119,0.000331444438407145,0.185527375597789,0.272529382973569,0.0210903504999282,0.381916650547688,0.0523610854263179,0.00398306723129825,0.0497169378470272,0.112873721175602,0.0233854504447327,0.0131525910887273,0.0419672928381016,0.19175816657039,0.139804916639848,0.0199634091118723,0.0128148167947754,0.0704346558539806,0.0446854087905155,0.185250975214685,0.379702897880425,0.248919805817027,0.378086261155548,0.385790599209707,0.0171029624347969,0.304055827031912,0.236028021192212,0.00381577170073249,0.43708543526427,0.220751884126538,0.270847512141633,0.030695181832827,0.00184312231916461,0.342546713564582,0.00762096499065232,0.0585894564590457,0.0111185284931443,0.00631017672369125,0.348898156837417,0.018232272955794,0.178313822249191,0.0118379861849079,0.0310703633521517,0.00501224831051822,0.0794453146679962,0.531005523220111,0.00219291435885142,0.305124551443315,0.292893456227418,0.0387709670715217,0.0426993148347516,0.252395707710793,0.166098322494066,0.140216701837973,0.129446409123032,0.0665692321648945,0.0331353494987298,0.0480077624984293,0.22281221574684,0.307735886778169,0.424851450683734,0.41809420462988,0.163418735974281,0.0295090650269169,0.579629059331691,0.148667491985346,0.399780367697298,0.204029053487775,0.0708996759434095,0.100080055832508,0.174798337466203,0.0157597646653846,0.0172833541923634,0.0769829604832123,0.135428032254769,0.0281171308031713,0.265966888199925,0.019630809710917,0.268766067319388,0.0988288155586782,0.0469140224133245,0.0351219588262839,0.13248881303265,0.0385006458128467,0.0247524972792976,0.291233772210814,0.0145969973813721,0.793283293437086,0.147761461342265,0.085667856817028,0.178903574974339,0.0676308611298371,0.352803596226343,0.0482332148595215,0.0429815160530611,0.246003962679535,0.0077651077336376,0.114297201233191,0.553681923113602,0.0819262810716102,0.0219956854340364,0.0403975148092241,0.19492989151411,0.32425042220466,0.0825066572237558,0.151843885989589,0.0881388349007943,0.0700836836105683,0.0432680728713729,0.0188868014601552,0.264054720434892,0.0270954257487496,0.0268554263263611,0.224830202799574,0.0199157648169385,0.00314315567360943,0.0430034011224588,0.0116374392864469,0.143607793665244,0.608447865148415,0.44410203258916,0.0205020226132522,0.244468969572109,0.70646101166674,0.484855240540479,0.315682558437768,0.213543813074165,0.252425966707829,0.124680949356871,0.370585551692007,0.114734471406759,0.00802480228126299,0.0971183195299252,0.54714968081386,0.0809809067358136,0.0526660504419237,0.254085272912849,0.0722709873025869,0.0699544000200795,0.111753905751013,0.326885806654174,0.0620994537467932,0.0279171083009135,0.101594288363815,0.0829119369786479,0.069846545149484,0.0474263079479634,0.00694161457300334,0.0418704247009845,0.0306297953202281,0.0421142068361611,0.0207916301341122,0.01135930946103,0.197231008840183,0.117787126888051,0.127531189303231,0.0340619676195731,0.165618698539145,0.49594832239409,0.0360646146350588,0.151753170093107,0.0428510485623921,0.0217705674935123,0.185719993444658,0.0146683725753309,0.0165802331291864,0.0332251921994708,0.344533688452345,0.058135387411783,0.0141519607754272,0.0377738278757197,0.0043278514680261,0.238645049192254,0.440266923588311,0.0184933397600307,0.0844867278908611,0.121464851740188,0.0627249455527116,0.101744931860671,0.0883709418029272,0.0421378397477114,0.153846383774598,0.00457986686080496,0.0466781871722828,0.243751237214172,0.755962598006017,0.167488825490033,0.274588069459318,0.295051528281802,0.105089535997089,0.251826941191317,0.104166600491957,0.130730471320474,0.0324557994004836,0.355851750169016,0.517871718810781,0.139993677716911,0.0254743842272683,0.0157546856285544,0.0119739422217883,0.323193245594444,0.0747274314916957,0.0690909433030287,0.0264265523191568,0.288483380046212,0.302610485676678,0.17081934220531,0.384129419566771,0.058842692426403,0.151104652038777,0.00313776390456161,0.0206102327547641,0.0281188063264687,0.044159033736049,0.444862948538194,0.0488439633954578,0.163367561975463,0.00661560062328137,0.0527323320486578,0.0217322149596514,0.351386821461885,0.0045265218832221,0.26595071635857,0.0393708102025879,0.221084141038548,0.0992952573305364,0.105065663762929,0.1470060654153,0.245161029407335,0.261250202558652,0.05088875679797,0.305067412699666,0.58032345278945,0.235493749066331,0.0205050406801361,0.255204044338525,0.0336960796492497,0.0135759409299266,0.00190354241967711,0.357133371254416,0.192980141086535,0.0393629119118909,0.0097516467725304,0.0434086858412297,0.376010657601491,0.0545021267885267,0.435542405220852,0.00169090761334416,0.00197903630210313,0.00763543355581985,0.354297817977431,0.00147432250517344,0.277952703582279,0.290794088297708,0.488293399690791,0.126635153816713,0.0334965926443756,0.0333635547604568,0.0333314851521984,0.0202032051149614,0.0412311005330104,0.675069306000456,0.00726431179170809,0.221341047859752,0.236907731417857,0.341479602607564,0.116529891259941,0.0058146965304403,0.394471220543748,0.0289884277952697,0.0299384011843571,0.0170258758449948,0.00524220233926143,0.263733066800184,0.241320162015484,0.064665486042619,0.0217289043767219,0.101885221838318,0.0262634495794809,0.0513382611155385,0.431631099614434,0.0530878002701731,0.0279259868988933,0.0711920899923711,0.397386177363322,0.605670544889615,0.233847711118727,0.00840128824423297,0.654822257491363,0.0147392144767271,0.0170544196166296,0.0779075535960723,0.197331810518429,0.00427705696821396,0.47588252842855,0.374413205312191,0.590707909097735,0.108826021539475,0.0219132473702131,0.0174960504766062,0.0336635525398623,0.262164705272001,0.00918196981575044,0.103483663047092,0.338372503210177,0.158086451085368,0.181828690815561,0.201046929292775,0.00964864674023307,0.145512472054548,0.356771081049962,0.227960578482069,0.422999005268816,0.386033398379281,0.19699040121488,0.0113746602472643,0.590238267600114,0.160656029335993,0.0427110036140384,0.0684423499787108,0.518740849796683,0.278664705455347,0.174296020399985,0.236329327678276,0.0245195857849206,0.307088335968106,0.00939715988211226,0.0137591911762202,0.0318550745639291,0.0658758794985793,0.162505136684722,0.0660643707073246,0.612348227961358,0.00954580653593918,0.0214148801510906,0.239274933121608,0.10284513664798,0.0245482012196713,0.0275456552238524,0.0713676052308905,0.110367402069756,0.0211630472462639,0.0453435219398992,0.163968374815938,0.156542990306851,0.00706899071156198,0.0667929837988251,0.124321700162066,0.0805451444440319,0.0028217205912906,0.043572572067913,0.0172560875032024,0.0342768860299727,0.0563813787909944,0.0790403302753694,0.273557036991119,0.0724024427553738,0.0350544146700448,0.0065520865313274,0.462407968418537,0.184415020690587,0.019796916772847,0.212779349421644,0.269697524644318,0.0308472362262175,0.340761575760658,0.115008103883495,0.405299877095634,0.0784201301438768,0.34581478183439,0.302297270946813,0.257941965482323,0.0237701718105911,0.0415799463259353,0.375716842212461,0.104002397652065,0.0837270373784138,0.246147919833077,0.0259090607274328,0.0202889106523573,0.178306040495611,0.119557534716181,0.0290677951603266,0.0069785425322084,0.0867722525799887,0.0635564171177671,0.211998480221404,0.372180782155101,0.0291650597018541,0.0185606702630723,0.0319244908791466,0.0123759196101221,0.265928665263786,0.375486381125033,0.0795319326942396,0.514739636314289,0.0303663514087674,0.223771550659037,0.671267103575932,0.551163605681496,0.250715757894669,0.0339792832286716,0.173231824288008,0.012226804885222,0.147929163165256,0.0130472110806725,0.0131559920345667,0.0207213764367548,0.0135056417719745,0.168007759540552,0.176536539062311,0.101019574058942,0.355248589061021,0.131812673909816,0.0172914753150827,0.266900554758397,0.0166574045817431,0.267738645124651,0.0308125971110124,0.620093807170105,0.321783985314396,0.517709965194911,0.114964484026768,0.136991343048921,0.193544599818955,0.123264488604024,0.223866445278544,0.194137393318278,0.624964352946187,0.487142037934971,0.728120734148558,0.504809575014442,0.706141689169108,0.533086073839643,0.783982744158644,0.562755915285623,0.0796940595321382,0.736573211415136,0.449745973809434,0.671103190708879,0.509240067073247,0.75548641872545,0.333667592465016,0.351179387026399,0.729296464655421,0.727191868014181,0.499062647640827,0.456780703186876,0.202271377211457,0.643239077875595,0.405119890322293,0.690238918402684,0.315284598552978,0.421360892886621,0.487091885738254,0.844003523463399,0.413628406492206,0.658574629502383,0.465396381081826,0.625457360308363,0.43992943832972,0.445036191540356,0.376078966740705,0.60742698122689,0.508324622569873,0.547687550761671,0.606108941242685,0.723037342337345,0.200387343465481,0.665643792479041,0.612896325258815,0.420612507763182,0.43832199858167,0.559316536456888,0.633332367641585,0.583234373703144,0.449221424250296,0.287844230931036,0.55723513652078,0.485762466015113,0.669993766238732,0.5229324448477,0.526353898797501,0.43492091405041,0.671331687919757,0.824733570094043,0.465045187283555,0.473318150858777,0.62611683914077,0.26871976495437,0.453620599888591,0.420067132012482,0.724340481815675,0.473815284767971,0.663126324201824,0.689614802405872],&#34;hoverinfo&#34;:&#34;y&#34;,&#34;type&#34;:&#34;box&#34;,&#34;fillcolor&#34;:&#34;rgba(255,255,255,1)&#34;,&#34;marker&#34;:{&#34;opacity&#34;:null,&#34;outliercolor&#34;:&#34;rgba(0,0,0,1)&#34;,&#34;line&#34;:{&#34;width&#34;:1.88976377952756,&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;},&#34;size&#34;:5.66929133858268},&#34;line&#34;:{&#34;color&#34;:&#34;rgba(51,51,51,1)&#34;,&#34;width&#34;:1.88976377952756},&#34;showlegend&#34;:false,&#34;xaxis&#34;:&#34;x&#34;,&#34;yaxis&#34;:&#34;y&#34;,&#34;mode&#34;:&#34;&#34;,&#34;frame&#34;:null},{&#34;x&#34;:[1,2,3,4,5,6],&#34;y&#34;:[0.524643171822601,0.0996876565815222,0.081249490921434,0.0563995537476775,0.0333393171155896,0.00884732667260201],&#34;text&#34;:[&#34;urban_cat: Large Central Metro&lt;br /&gt;moment: 0.524643172&#34;,&#34;urban_cat: Large Fringe Metro&lt;br /&gt;moment: 0.099687657&#34;,&#34;urban_cat: Medium Metro&lt;br /&gt;moment: 0.081249491&#34;,&#34;urban_cat: Small Metro&lt;br /&gt;moment: 0.056399554&#34;,&#34;urban_cat: Micropolitan&lt;br /&gt;moment: 0.033339317&#34;,&#34;urban_cat: Non-core&lt;br /&gt;moment: 0.008847327&#34;],&#34;type&#34;:&#34;scatter&#34;,&#34;mode&#34;:&#34;lines+markers&#34;,&#34;opacity&#34;:1,&#34;line&#34;:{&#34;color&#34;:&#34;transparent&#34;},&#34;error_y&#34;:{&#34;array&#34;:[null,null,null,null,null,null],&#34;arrayminus&#34;:[null,null,null,null,null,null],&#34;type&#34;:&#34;data&#34;,&#34;width&#34;:0,&#34;symmetric&#34;:false,&#34;color&#34;:&#34;rgba(255,0,0,1)&#34;},&#34;showlegend&#34;:false,&#34;xaxis&#34;:&#34;x&#34;,&#34;yaxis&#34;:&#34;y&#34;,&#34;hoverinfo&#34;:&#34;text&#34;,&#34;marker&#34;:{&#34;autocolorscale&#34;:false,&#34;color&#34;:&#34;rgba(255,0,0,1)&#34;,&#34;opacity&#34;:1,&#34;size&#34;:7.55905511811024,&#34;symbol&#34;:&#34;circle&#34;,&#34;line&#34;:{&#34;width&#34;:3.77952755905512,&#34;color&#34;:&#34;rgba(255,0,0,1)&#34;}},&#34;hoveron&#34;:&#34;points&#34;,&#34;frame&#34;:null},{&#34;x&#34;:[1,2,3,4,5,6],&#34;y&#34;:[0.536135015230626,0.158964539502874,0.149886905468824,0.10096719832889,0.0464112172828825,0.014005991054992],&#34;text&#34;:[&#34;urban_cat: Large Central Metro&lt;br /&gt;moment: 0.53613502&#34;,&#34;urban_cat: Large Fringe Metro&lt;br /&gt;moment: 0.15896454&#34;,&#34;urban_cat: Medium Metro&lt;br /&gt;moment: 0.14988691&#34;,&#34;urban_cat: Small Metro&lt;br /&gt;moment: 0.10096720&#34;,&#34;urban_cat: Micropolitan&lt;br /&gt;moment: 0.04641122&#34;,&#34;urban_cat: Non-core&lt;br /&gt;moment: 0.01400599&#34;],&#34;type&#34;:&#34;scatter&#34;,&#34;mode&#34;:&#34;lines+markers&#34;,&#34;opacity&#34;:1,&#34;line&#34;:{&#34;color&#34;:&#34;transparent&#34;},&#34;error_y&#34;:{&#34;array&#34;:[null,null,null,null,null,null],&#34;arrayminus&#34;:[null,null,null,null,null,null],&#34;type&#34;:&#34;data&#34;,&#34;width&#34;:0,&#34;symmetric&#34;:false,&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;},&#34;showlegend&#34;:false,&#34;xaxis&#34;:&#34;x&#34;,&#34;yaxis&#34;:&#34;y&#34;,&#34;hoverinfo&#34;:&#34;text&#34;,&#34;marker&#34;:{&#34;autocolorscale&#34;:false,&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;,&#34;opacity&#34;:1,&#34;size&#34;:11.3385826771654,&#34;symbol&#34;:&#34;cross-thin-open&#34;,&#34;line&#34;:{&#34;width&#34;:3.77952755905512,&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;}},&#34;hoveron&#34;:&#34;points&#34;,&#34;frame&#34;:null}],&#34;layout&#34;:{&#34;margin&#34;:{&#34;t&#34;:26.2283105022831,&#34;r&#34;:7.30593607305936,&#34;b&#34;:40.1826484018265,&#34;l&#34;:43.1050228310502},&#34;plot_bgcolor&#34;:&#34;rgba(235,235,235,1)&#34;,&#34;paper_bgcolor&#34;:&#34;rgba(255,255,255,1)&#34;,&#34;font&#34;:{&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:14.6118721461187},&#34;xaxis&#34;:{&#34;domain&#34;:[0,1],&#34;automargin&#34;:true,&#34;type&#34;:&#34;linear&#34;,&#34;autorange&#34;:false,&#34;range&#34;:[0.4,6.6],&#34;tickmode&#34;:&#34;array&#34;,&#34;ticktext&#34;:[&#34;Large Central Metro&#34;,&#34;Large Fringe Metro&#34;,&#34;Medium Metro&#34;,&#34;Small Metro&#34;,&#34;Micropolitan&#34;,&#34;Non-core&#34;],&#34;tickvals&#34;:[1,2,3,4,5,6],&#34;categoryorder&#34;:&#34;array&#34;,&#34;categoryarray&#34;:[&#34;Large Central Metro&#34;,&#34;Large Fringe Metro&#34;,&#34;Medium Metro&#34;,&#34;Small Metro&#34;,&#34;Micropolitan&#34;,&#34;Non-core&#34;],&#34;nticks&#34;:null,&#34;ticks&#34;:&#34;outside&#34;,&#34;tickcolor&#34;:&#34;rgba(51,51,51,1)&#34;,&#34;ticklen&#34;:3.65296803652968,&#34;tickwidth&#34;:0.66417600664176,&#34;showticklabels&#34;:true,&#34;tickfont&#34;:{&#34;color&#34;:&#34;rgba(77,77,77,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:11.689497716895},&#34;tickangle&#34;:-0,&#34;showline&#34;:false,&#34;linecolor&#34;:null,&#34;linewidth&#34;:0,&#34;showgrid&#34;:true,&#34;gridcolor&#34;:&#34;rgba(255,255,255,1)&#34;,&#34;gridwidth&#34;:0.66417600664176,&#34;zeroline&#34;:false,&#34;anchor&#34;:&#34;y&#34;,&#34;title&#34;:{&#34;text&#34;:&#34;County Character&#34;,&#34;font&#34;:{&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:14.6118721461187}},&#34;hoverformat&#34;:&#34;.2f&#34;},&#34;yaxis&#34;:{&#34;domain&#34;:[0,1],&#34;automargin&#34;:true,&#34;type&#34;:&#34;linear&#34;,&#34;autorange&#34;:false,&#34;range&#34;:[-0.0420965765541204,0.886198766321376],&#34;tickmode&#34;:&#34;array&#34;,&#34;ticktext&#34;:[&#34;0.0&#34;,&#34;0.2&#34;,&#34;0.4&#34;,&#34;0.6&#34;,&#34;0.8&#34;],&#34;tickvals&#34;:[0,0.2,0.4,0.6,0.8],&#34;categoryorder&#34;:&#34;array&#34;,&#34;categoryarray&#34;:[&#34;0.0&#34;,&#34;0.2&#34;,&#34;0.4&#34;,&#34;0.6&#34;,&#34;0.8&#34;],&#34;nticks&#34;:null,&#34;ticks&#34;:&#34;outside&#34;,&#34;tickcolor&#34;:&#34;rgba(51,51,51,1)&#34;,&#34;ticklen&#34;:3.65296803652968,&#34;tickwidth&#34;:0.66417600664176,&#34;showticklabels&#34;:true,&#34;tickfont&#34;:{&#34;color&#34;:&#34;rgba(77,77,77,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:11.689497716895},&#34;tickangle&#34;:-0,&#34;showline&#34;:false,&#34;linecolor&#34;:null,&#34;linewidth&#34;:0,&#34;showgrid&#34;:true,&#34;gridcolor&#34;:&#34;rgba(255,255,255,1)&#34;,&#34;gridwidth&#34;:0.66417600664176,&#34;zeroline&#34;:false,&#34;anchor&#34;:&#34;x&#34;,&#34;title&#34;:{&#34;text&#34;:&#34;IMI&#34;,&#34;font&#34;:{&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:14.6118721461187}},&#34;hoverformat&#34;:&#34;.2f&#34;},&#34;shapes&#34;:[{&#34;type&#34;:&#34;rect&#34;,&#34;fillcolor&#34;:null,&#34;line&#34;:{&#34;color&#34;:null,&#34;width&#34;:0,&#34;linetype&#34;:[]},&#34;yref&#34;:&#34;paper&#34;,&#34;xref&#34;:&#34;paper&#34;,&#34;x0&#34;:0,&#34;x1&#34;:1,&#34;y0&#34;:0,&#34;y1&#34;:1}],&#34;showlegend&#34;:false,&#34;legend&#34;:{&#34;bgcolor&#34;:&#34;rgba(255,255,255,1)&#34;,&#34;bordercolor&#34;:&#34;transparent&#34;,&#34;borderwidth&#34;:1.88976377952756,&#34;font&#34;:{&#34;color&#34;:&#34;rgba(0,0,0,1)&#34;,&#34;family&#34;:&#34;&#34;,&#34;size&#34;:11.689497716895}},&#34;hovermode&#34;:&#34;closest&#34;,&#34;barmode&#34;:&#34;relative&#34;},&#34;config&#34;:{&#34;doubleClick&#34;:&#34;reset&#34;,&#34;modeBarButtonsToAdd&#34;:[&#34;hoverclosest&#34;,&#34;hovercompare&#34;],&#34;showSendToCloud&#34;:false},&#34;source&#34;:&#34;A&#34;,&#34;attrs&#34;:{&#34;143081e2fa0ad&#34;:{&#34;x&#34;:{},&#34;y&#34;:{},&#34;type&#34;:&#34;box&#34;},&#34;1430848ddcd56&#34;:{&#34;x&#34;:{},&#34;y&#34;:{}},&#34;1430859d3ee79&#34;:{&#34;x&#34;:{},&#34;y&#34;:{}}},&#34;cur_data&#34;:&#34;143081e2fa0ad&#34;,&#34;visdat&#34;:{&#34;143081e2fa0ad&#34;:[&#34;function (y) &#34;,&#34;x&#34;],&#34;1430848ddcd56&#34;:[&#34;function (y) &#34;,&#34;x&#34;],&#34;1430859d3ee79&#34;:[&#34;function (y) &#34;,&#34;x&#34;]},&#34;highlight&#34;:{&#34;on&#34;:&#34;plotly_click&#34;,&#34;persistent&#34;:false,&#34;dynamic&#34;:false,&#34;selectize&#34;:false,&#34;opacityDim&#34;:0.2,&#34;selected&#34;:{&#34;opacity&#34;:1},&#34;debounce&#34;:0},&#34;shinyEvents&#34;:[&#34;plotly_hover&#34;,&#34;plotly_click&#34;,&#34;plotly_selected&#34;,&#34;plotly_relayout&#34;,&#34;plotly_brushed&#34;,&#34;plotly_brushing&#34;,&#34;plotly_clickannotation&#34;,&#34;plotly_doubleclick&#34;,&#34;plotly_deselect&#34;,&#34;plotly_afterplot&#34;,&#34;plotly_sunburstclick&#34;],&#34;base_url&#34;:&#34;https://plot.ly&#34;},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;It is useful to see if there is a geographic pattern in these compactness scores relative to the size of the metro. Of all the large central metro counties, on average, West North Central are most compact, while Mountain counties are least compact. This result can partially be explained by the variation in topography. Terrain ruggedness, potentially prevents compact development. In the large fringe metro category, Middle Atlantic counties, on average, are most compact.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://nkaza.github.io/post/a-compactness-index-for-urban-patterns/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;limitations&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Limitations&lt;/h1&gt;
&lt;table class=&#34;table table-striped&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;caption&gt;
&lt;span id=&#34;tab:unnamed-chunk-5&#34;&gt;Table 1: &lt;/span&gt;Most Compact Counties according to IMI
&lt;/caption&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
County
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
State
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
IMI
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr grouplength=&#34;3&#34;&gt;
&lt;td colspan=&#34;3&#34; style=&#34;border-bottom: 1px solid;&#34;&gt;
&lt;strong&gt;East North Central&lt;/strong&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;padding-left: 2em;&#34; indentlevel=&#34;1&#34;&gt;
Marion
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Indiana
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.84
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;padding-left: 2em;&#34; indentlevel=&#34;1&#34;&gt;
DuPage
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Illinois
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.79
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;padding-left: 2em;&#34; indentlevel=&#34;1&#34;&gt;
Franklin
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Ohio
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.78
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr grouplength=&#34;3&#34;&gt;
&lt;td colspan=&#34;3&#34; style=&#34;border-bottom: 1px solid;&#34;&gt;
&lt;strong&gt;East South Central&lt;/strong&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;padding-left: 2em;&#34; indentlevel=&#34;1&#34;&gt;
Shelby
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tennessee
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.67
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;padding-left: 2em;&#34; indentlevel=&#34;1&#34;&gt;
Fayette
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Kentucky
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.64
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;padding-left: 2em;&#34; indentlevel=&#34;1&#34;&gt;
Davidson
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Tennessee
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.56
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr grouplength=&#34;3&#34;&gt;
&lt;td colspan=&#34;3&#34; style=&#34;border-bottom: 1px solid;&#34;&gt;
&lt;strong&gt;Middle Atlantic&lt;/strong&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;padding-left: 2em;&#34; indentlevel=&#34;1&#34;&gt;
Kings
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
New York
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.82
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;padding-left: 2em;&#34; indentlevel=&#34;1&#34;&gt;
Nassau
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
New York
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.76
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;padding-left: 2em;&#34; indentlevel=&#34;1&#34;&gt;
Bronx
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
New York
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.73
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr grouplength=&#34;3&#34;&gt;
&lt;td colspan=&#34;3&#34; style=&#34;border-bottom: 1px solid;&#34;&gt;
&lt;strong&gt;Mountain&lt;/strong&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;padding-left: 2em;&#34; indentlevel=&#34;1&#34;&gt;
Salt Lake
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Utah
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.76
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;padding-left: 2em;&#34; indentlevel=&#34;1&#34;&gt;
Ada
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Idaho
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.61
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;padding-left: 2em;&#34; indentlevel=&#34;1&#34;&gt;
Bernalillo
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
New Mexico
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.60
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr grouplength=&#34;3&#34;&gt;
&lt;td colspan=&#34;3&#34; style=&#34;border-bottom: 1px solid;&#34;&gt;
&lt;strong&gt;New England&lt;/strong&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;padding-left: 2em;&#34; indentlevel=&#34;1&#34;&gt;
Kent
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Rhode Island
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.43
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;padding-left: 2em;&#34; indentlevel=&#34;1&#34;&gt;
Hartford
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Connecticut
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.42
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;padding-left: 2em;&#34; indentlevel=&#34;1&#34;&gt;
Hampden
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Massachusetts
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.42
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr grouplength=&#34;3&#34;&gt;
&lt;td colspan=&#34;3&#34; style=&#34;border-bottom: 1px solid;&#34;&gt;
&lt;strong&gt;Pacific&lt;/strong&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;padding-left: 2em;&#34; indentlevel=&#34;1&#34;&gt;
Orange
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
California
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.56
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;padding-left: 2em;&#34; indentlevel=&#34;1&#34;&gt;
Multnomah
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Oregon
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.53
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;padding-left: 2em;&#34; indentlevel=&#34;1&#34;&gt;
Sacramento
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
California
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.49
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr grouplength=&#34;3&#34;&gt;
&lt;td colspan=&#34;3&#34; style=&#34;border-bottom: 1px solid;&#34;&gt;
&lt;strong&gt;South Atlantic&lt;/strong&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;padding-left: 2em;&#34; indentlevel=&#34;1&#34;&gt;
Roanoke
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Virginia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.84
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;padding-left: 2em;&#34; indentlevel=&#34;1&#34;&gt;
Charlottesville
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Virginia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.75
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;padding-left: 2em;&#34; indentlevel=&#34;1&#34;&gt;
Salem
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Virginia
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.74
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr grouplength=&#34;3&#34;&gt;
&lt;td colspan=&#34;3&#34; style=&#34;border-bottom: 1px solid;&#34;&gt;
&lt;strong&gt;West North Central&lt;/strong&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;padding-left: 2em;&#34; indentlevel=&#34;1&#34;&gt;
St. Louis
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Missouri
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.73
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;padding-left: 2em;&#34; indentlevel=&#34;1&#34;&gt;
Ramsey
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Minnesota
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.72
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;padding-left: 2em;&#34; indentlevel=&#34;1&#34;&gt;
Hennepin
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Minnesota
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.67
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr grouplength=&#34;3&#34;&gt;
&lt;td colspan=&#34;3&#34; style=&#34;border-bottom: 1px solid;&#34;&gt;
&lt;strong&gt;West South Central&lt;/strong&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;padding-left: 2em;&#34; indentlevel=&#34;1&#34;&gt;
Dallas
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Texas
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.73
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;padding-left: 2em;&#34; indentlevel=&#34;1&#34;&gt;
Tarrant
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Texas
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.69
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;padding-left: 2em;&#34; indentlevel=&#34;1&#34;&gt;
Bexar
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Texas
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.69
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The above table throws up some interesting names that point to some of the limitations of IMI. Dallas and Tarrant counties are the most compact according to IMI despite the reputation of the Dallas-Fortworth Metropolitan Area to be among the most sprawling. Likewise for Orange county in California. Both Ronoake and Charlottesville are independent cities in the Commonwealth of Virginia (County equivalents in Census parlance) are relatively small compared to ‘real’ counties. To see this explore the following bivariate graph.&lt;/p&gt;
&lt;div id=&#34;htmlwidget-3&#34; style=&#34;width:100%;height:480px;&#34; class=&#34;widgetframe html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-3&#34;&gt;{&#34;x&#34;:{&#34;url&#34;:&#34;index_files/figure-html//widgets/widget_unnamed-chunk-6.html&#34;,&#34;options&#34;:{&#34;xdomain&#34;:&#34;*&#34;,&#34;allowfullscreen&#34;:false,&#34;lazyload&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;You can click on each type of county to toggle their visibility. There is no real relationship between urban population density and IMI. Some dense places (e.g. New York, NY) has very small IMI and some low density medium metropolitan areas have high compactness (e.g. Ronoke, VA). Thus the indicators are orthogonal.&lt;/p&gt;
&lt;p&gt;A side note here, according to &lt;a href=&#34;https://en.wikipedia.org/wiki/Brown_County,_Indiana&#34;&gt;Wikipedia&lt;/a&gt;, Brown County, IN is one of the least dense counties in Indiana. However, it shows up on the right side of the x-axis (high density). This is because density in this graph is calculated as total population divided by urban land area from the land cover data (not gross density).&lt;/p&gt;
&lt;p&gt;As with any measure, we need to understand the limitations and its usefulness. I want to point out two main issues. This is an area based moment of inertia and thus areas that are ‘low density’ but contiguous would score high. The second is that the shape of the landscape (county) becomes quite important especially in more heavily urban counties. To see this, we only have to look at the difference in IMI between New York County (Manhattan) and King’s County (Brooklyn)&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;img/newyorkcounty.png&#34; style=&#34;width:50.0%&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Manhattan, IMI=0.26&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;img/kingcounty.png&#34; style=&#34;width:50.0%&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Brooklyn, IMI=0.82&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusions&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Conclusions&lt;/h1&gt;
&lt;p&gt;IMI is a useful metric for measuring the compactness. Just like any other, it should be used with appreciation of its quirks.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Transportation Energy Consumption in the US</title>
      <link>https://nkaza.github.io/post/transportation-energy-consumption/</link>
      <pubDate>Tue, 02 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://nkaza.github.io/post/transportation-energy-consumption/</guid>
      <description>&lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;In this post, I am going to briefly talk about how the transportation energy consumption varies across United States. Much of the energy in that sector is from liquid fuels and the transmission and distribution network of these fuels have enormous land use and transportation implications. If we were to think about changing the fuel mix of the transportation fleet (say for example making hydrogen fuel cells or electricity more prominent), we need to think through its implications.&lt;/p&gt;
&lt;p&gt;This work is published as &lt;a href=&#34;https://doi.org/10.1016/j.enpol.2019.111049&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kaza, N. 2020 Urban Form and Transportation Energy Consumption, &lt;em&gt;Energy Policy&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In the United States (US), the transportation sector consumes about 29% of the total energy in 2017, rising from 23.5% in the 1960s even while the energy efficiency of the economy increased. Much of this energy comes from liquid carbon-based fuels contributing to greenhouse gas emissions and bad air quality. While we know a bit about how much energy is consumed in the transportation sector nationally, we don&amp;rsquo;t really have a grasp on how various local and state policies (incluidng the design, form and function of cities and regions) are affecting transportation energy consumption.&lt;/p&gt;
&lt;h1 id=&#34;three-components-of-energy-consumption&#34;&gt;Three components of energy consumption&lt;/h1&gt;
&lt;p&gt;The three main components that explain energy consumption in the sector is the total volume of travel, mode split and average energy efficiencies of the fleet mix.  Volume of travel depends on the distances between origins and destinations, network effects and trip frequencies. Mode split, the transportation mode that trip uses, is dependent on distances that need to be travelled, the availaibility and ease of mode not just for the particular trip, but for subsequent and prior chained trips and trip purposes (e.g. delivery of goods, shuttling kids). The energy efficiency of the fleet mix depends on adoption rates of newer vehicles, organisational/household acquisition rules and procedures and government policies on pollution control mechanisms, tax subsidies, depreciation rules etc.&lt;/p&gt;
&lt;p&gt;In addition to these complicated mechanisms through which we can influence energy consumption, we should also be mindful of the different components of energy consumption. We need to account for transportation consumption both in freight and in person travel. Light duty vehicles with short wheel bases (passenger cars, vans, SUVs etc.) only accounted for 52% of highway transportation energy in 2016 (Bureau of Transportation Statistics 2018 Table 4.06). Assuming other vehicle types are largely associated with non-household travel, relying simply on household travel underestimates the total energy consumption in the system and the impact of urban form.&lt;/p&gt;
&lt;h1 id=&#34;sales-in-gas-stations&#34;&gt;Sales in Gas stations&lt;/h1&gt;
&lt;p&gt;Sub national information is not easily forthcoming for transportation sector. Since we can not simply proxy total energy consumption from VMT derived from household travel surveys, we need an alternative strategy.  Because most of energy is purchased at retail gas stations in the US, we can study the geographic differences in energy consumption, by studying the variation in gas station sales.&lt;/p&gt;
&lt;p&gt;I use the &lt;a href=&#34;https://www.census.gov/programs-surveys/economic-census/data/tables.2012.html.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2012 Economic Census&lt;/a&gt; by the US Census Bureau to construct a proxy for transportation energy consumption, by analyzing the sales at gas stations in each county (or equivalent areas) of the United States. The Bureau collects extensive data on businesses every 5 years.  I use the data is reported at a county level for the retail sector (North American Industrial Classification System (NAICS) code 44-45), in particular, the total sales receipts from the gas stations (NAICS 447). Due to confidentiality concerns, data for 344 counties are not reported.&lt;/p&gt;
&lt;img src=&#34;https://nkaza.github.io/post/transportation-energy-consumption/index_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;768&#34; /&gt;
&lt;p&gt;From the above map, it should be clear that there are some outliers (e.g. Culberson County, TX for per capita consumption) that might skew our understanding. It is also entirely possible that there might be data quality issues associated with those outliers.&lt;/p&gt;
&lt;h2 id=&#34;energy-consumption-by-county-character&#34;&gt;Energy Consumption by County Character&lt;/h2&gt;
&lt;p&gt;Of all the states, Wyoming and North Dakota are among the top of the per capita expenditure in gasoline stations, followed by the states in the Midwest. These states are characterized by low population and vast open spaces. The populous regions in the US, the Northeast and the Pacific are at the bottom of the per capita expenditures. District of Columbia has only $418 expenditures per capita suggesting potential explanations of large commuting population from nearby states (Virginia and Maryland in particular), extensive public transportation infrastructure and high population density.&lt;/p&gt;
&lt;p&gt;Counties outside metropolitan statistical areas have 41.2% more per capita sales than those within them. While these counties account for only 16.2% of the total population, this suggests that urbanization is associated with lower per capita consumption due to proximity of destinations and increased economic development. Finer urban type classification of the counties from National Center for Health Statistics (NCHS) reveal an even starker pattern. Large central metro counties, on average, have two fifths of the per capita sales of the non-core rural counties. As the urbanization intensifies, per capita consumption decreases (see Table below), even though large and medium metro counties account for more than two-thirds of the total sales.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;County Type&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;Annual Sales (Millions)&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;Per capita Sales&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Non-core&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;47.3&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$3,725&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Micropolitan&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;110.1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$2,622&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Small Metro&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;190.1&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$2,400&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Medium Metro&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;333.8&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$1,975&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Large Fringe Metro&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;363.7&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$1,775&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Large Central Metro&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;1,753.2&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$1,285&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Of the metropolitan areas Cheyenne, WY, Winchester, VA and Joplin, MO spend more than 4,000 USD per capita in gas stations, suggesting a large variation within urban areas. Corvallis, OR has the least, with both New York, NY and Boulder CO following closely (&amp;lt;1,000 USD per capita). This suggests dense urban environments with high transit amenities may result in lower spending. Metros along the Gulf coast and in states like Arizona and South Carolina exhibit large expenditures.&lt;/p&gt;
&lt;h1 id=&#34;gas-stations--convenience-stores&#34;&gt;Gas stations &amp;amp; Convenience Stores&lt;/h1&gt;
&lt;p&gt;In the United States, most gas stations come with convenience stores. It could very well be that some of the sales at the gas stations, come from the non-fuel sales. Unfortunately, it is hard to tease out how much of it is gasoline/diesel sales and from convenience store items. It is also likely that in rural counties, the convenience store sales form larger proportion of the total sales as options may be limited.&lt;/p&gt;
&lt;p&gt;We can test the effect of the convinence stores by looking at sales from gas stations that do not have conveniences stores and comparing them to those that do. Unfortunately due to privacy restrictions, data for 835 counties are reported in the 2012 census. For this subset of counties, the correlation between sales from all gas stations and those from gas stations without convenience stores is 0.82.&lt;/p&gt;
&lt;img src=&#34;https://nkaza.github.io/post/transportation-energy-consumption/index_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;768&#34; /&gt;
&lt;p&gt;The difference between the red and black lines represent the bias in the data introduced by the convenience stores.&lt;/p&gt;
&lt;h1 id=&#34;conclusions&#34;&gt;Conclusions&lt;/h1&gt;
&lt;p&gt;Because transportation, by definition, is highly mobile it is not clear what percentage of the sales in each county can be associated with travel within the county and what is a function of regional travel and transportation throughput. Because highly disaggregated data on sales and locations of gas stations is not readily available, we cannot tease out these effects. Future work involving digital traces of household expenditures, could perhaps be used to elucidate these effects. It is clear that gas station sales are an imperfect measure of transportation energy consumption. But it is a useful one at a subnational scale to understand the geographic variations in energy consumption.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Spatial Regression Discontinuity Design Setup</title>
      <link>https://nkaza.github.io/post/spatial-regression-discontinuity-design-setup/</link>
      <pubDate>Sun, 08 Jul 2018 00:00:00 +0000</pubDate>
      <guid>https://nkaza.github.io/post/spatial-regression-discontinuity-design-setup/</guid>
      <description>
&lt;script src=&#34;https://nkaza.github.io/post/spatial-regression-discontinuity-design-setup/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://nkaza.github.io/post/spatial-regression-discontinuity-design-setup/index_files/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://nkaza.github.io/post/spatial-regression-discontinuity-design-setup/index_files/pymjs/pym.v1.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://nkaza.github.io/post/spatial-regression-discontinuity-design-setup/index_files/widgetframe-binding/widgetframe.js&#34;&gt;&lt;/script&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#point-set-theory-and-the-de-9im-matrix&#34;&gt;Point Set Theory and the DE-9IM Matrix&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;introduction&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The current gold standard for testing the efficacy of an intervention/program/procedure requires this randomisation of participants to treatment and control. The following video by &lt;a href=&#34;https://www.povertyactionlab.org/&#34;&gt;J-PAL&lt;/a&gt; gives a simple explanation of why this may be the case.&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/Uxqw2Pgm7s8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;In many cases, randomisation to some program is not feasible. There may be political issues, information leaks and other real world problems that &lt;a href=&#34;http://www.nber.org/papers/t0295&#34;&gt;affect the conclusions&lt;/a&gt; that can be drawn. There are also number of &lt;a href=&#34;https://doi.org/10.1016/j.socscimed.2017.12.005&#34;&gt;theoretical critiques&lt;/a&gt; for randomised controlled trials.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;regression-discontinuity&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Regression Discontinuity&lt;/h2&gt;
&lt;p&gt;Sometimes it is possible to exploit the sharp discontinuity in program application to see what the effect of the program is at the discontinuity. The key intuition is that at the &lt;strong&gt;a priori&lt;/strong&gt; selected discontinuity, in a small window on either side of the discontinuity, the observations are essentially similar except for the treatment. For example, &lt;a href=&#34;http://dx.doi.org/10.1002/pam.21929&#34;&gt;Ellen, Horn &amp;amp; Schwartz (2016)&lt;/a&gt; test the effect of residential location choices of households, whose oldest child becomes eligible for kindergarten. To do this, they focus on voucher receiving households whose oldest child just met the kindergarten eligibility cut-off date and those who missed the cut-off. The &lt;em&gt;rating variable&lt;/em&gt; in this case is age in years by Sep 1 (or some other date) and &lt;em&gt;cut-point&lt;/em&gt; is 5 years. Because the cut-off is determined independent of the participants in the program and by looking at the effect of vouchers in a local neighborhood around the cut-off, they determined the effect of vouchers on residential mobility.&lt;/p&gt;
&lt;p&gt;There are multiple ways to conceptualise this design; 1) Discontinuity at the cut-point 2) local randomization at the cut-point. See below images for visualisation. In particular, please pay attention to the boxes around the cut-off that symblolise local neighborhood.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;img/RDD_before.png&#34; style=&#34;width:50.0%&#34; alt=&#34;Before&#34; /&gt; &lt;img src=&#34;img/RDD_after.png&#34; style=&#34;width:50.0%&#34; alt=&#34;After&#34; /&gt;
&lt;em&gt;Images adapted from &lt;a href=&#34;https://www.mdrc.org/sites/default/files/RDD%20Guide_Full%20rev%202016_0.pdf&#34;&gt;Jacob et. al (2012)&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;spatial-regression-discontinuity&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Spatial Regression Discontinuity&lt;/h2&gt;
&lt;p&gt;It is relatively straightforward to construct a regression discontinuity when the rating variable is on a real line and cut-point is a point on that line, due to fact that real numbers is a &lt;a href=&#34;http://mathworld.wolfram.com/TotallyOrderedSet.html&#34;&gt;totally ordered set&lt;/a&gt;, in particular, the comparability property w.r.t. &lt;span class=&#34;math inline&#34;&gt;\(\lt\)&lt;/span&gt; holds. However, it is often the case that the discontinuity is a spatial one.&lt;/p&gt;
&lt;p&gt;For example, a subsidy for rooftop solar is implemented by a city within its jurisdiction, and we want to test if the subsidy increased the adoption of rooftop solar. The idea is parcels and households on both sides of the edge of the jurisdictions are similar and the key difference is the eligibility to the subsidy and therefore comparing the adoption rates among those households will help us identify if the subsidy has any effect.&lt;/p&gt;
&lt;p&gt;Another example could be the effect of minimum wage regulation on employment levels as studied by &lt;a href=&#34;https://doi.org/10.1162/REST_a_00039&#34;&gt;Dube, Lester and Reich (2010)&lt;/a&gt;. They do not employ a regression discontinuity design, but a matching design, but the intuition still applies. Counties at the state borders are likely to be similar and state policy on minimum wage is the only differentiator and differences in employment trends among these subset of counties (at the border) are an estimate of whether minimum wage policies reduce employment levels or not.&lt;/p&gt;
&lt;p&gt;Similar design for testing the effect of Clean Cities Coalition (CCC) program on air quality and number of alternative fueling stations in counties within and outside the coalition boundaries can be found in &lt;a href=&#34;http://doi.og/10.1016/j.scitotenv.2016.11.119&#34;&gt;Qiu and Kaza (2016)&lt;/a&gt;. In this study, we not only use the spatial discontinuity of the boundaries but also the temporal discontinuity of when the CCC came into existence.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;img/ccc.jpg&#34; width=&#34;600&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Illustration of research design in &lt;a href=&#34;http://doi.og/10.1016/j.scitotenv.2016.11.119&#34;&gt;Qiu &amp;amp; Kaza (2016)&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;There are some key differences between standard regression discontinuity and the spatial version. See &lt;a href=&#34;http://doi.og/10.1093/pan/mpu014&#34;&gt;Keele and Titiunik (2015)&lt;/a&gt;. They are 1) different measures of distance from the cutoffs may require different identification assumptions 2) Compound treatments 3) Boundary points at the cut-off have different interpretation.&lt;/p&gt;
&lt;p&gt;For the most part, I am going to ignore these differences in this post for the sake of illustration. In particular, when polygonal entities (instead of points) are the observations of interest, many of the differences are not that important.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;identifying-relevant-observations-on-either-side-of-the-spatial-discontinuity.&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Identifying relevant observations on either side of the spatial discontinuity.&lt;/h2&gt;
&lt;p&gt;Let us assume that we have a discontinuity at the edge of the metropolitan statistical areas. For the purposes of illustration, I am going to download CBSA and county shapefiles from Census using &lt;code&gt;tigris&lt;/code&gt; package. I am going to restrict my attention to Illinois for the sake of exposition.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;
cbsa &amp;lt;- core_based_statistical_areas()
cty_shp &amp;lt;- counties(state=&amp;quot;il&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#library(rgeos)
library(sf)
library(tidyverse)
library(tigris)

msa &amp;lt;- cbsa[cbsa$LSAD==&amp;quot;M1&amp;quot;,] # Restrict attention only to Metro areas, ignore Micro
msa_IL &amp;lt;- msa[st_centroid(cty_shp, byid=T),] # Select metros that are in IL. &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    If we used the &lt;strong&gt;“[”&lt;/strong&gt; method using a polygon instead of points it selects MSAs that are also outside IL but are adjacent to IL county boundary files. It does not matter for the illustration, but may be problematic for other work. Hence we are keeping only those MSAs where the IL county centroids are in a MSA.
  &lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;There are 102 counties in IL.&lt;/p&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:100%;height:480px;&#34; class=&#34;widgetframe html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;url&#34;:&#34;index_files/figure-html//widgets/widget_unnamed-chunk-3.html&#34;,&#34;options&#34;:{&#34;xdomain&#34;:&#34;*&#34;,&#34;allowfullscreen&#34;:false,&#34;lazyload&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;Before running any topology operations, it is always a good idea to check to see if the geometry is valid (e.g. no self-intersections etc.)&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cty_shp[!st_is_valid(cty_shp, byid = TRUE),]
# Simple feature collection with 0 features and 17 fields
# Bounding box:  xmin: NA ymin: NA xmax: NA ymax: NA
# Geodetic CRS:  NAD83
#  [1] STATEFP  COUNTYFP COUNTYNS GEOID    NAME     NAMELSAD LSAD     CLASSFP 
#  [9] MTFCC    CSAFP    CBSAFP   METDIVFP FUNCSTAT ALAND    AWATER   INTPTLAT
# [17] INTPTLON geometry
# &amp;lt;0 rows&amp;gt; (or 0-length row.names)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Since this returns an empty list, lets proceed to extract all the counties within the MSA and outside MSA and use the TOUCHES relationship with the MSA boundary to extract counties within and outside the MSA. Note the &amp;gt; 0, for the reason that counties can be adjacent to many MSA boundaries.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;msa_ctyID &amp;lt;- cty_shp$CBSAFP %in% msa_IL$CBSAFP
msa_cty &amp;lt;- cty_shp[msa_ctyID,]
nonmsa_cty &amp;lt;- cty_shp[!msa_ctyID,]
treat_cty &amp;lt;- msa_cty[rowSums(st_touches(msa_cty, st_boundary(msa_IL),sparse=F)) &amp;gt; 0,]
cntrl_cty &amp;lt;- nonmsa_cty[rowSums(st_touches(nonmsa_cty, st_boundary(msa_IL), sparse=F)) &amp;gt; 0,]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here is a visual representation.&lt;/p&gt;
&lt;div id=&#34;htmlwidget-2&#34; style=&#34;width:100%;height:480px;&#34; class=&#34;widgetframe html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-2&#34;&gt;{&#34;x&#34;:{&#34;url&#34;:&#34;index_files/figure-html//widgets/widget_unnamed-chunk-6.html&#34;,&#34;options&#34;:{&#34;xdomain&#34;:&#34;*&#34;,&#34;allowfullscreen&#34;:false,&#34;lazyload&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;Note how Kane and Dupage counties, near Chicago, that are completely within MSA, are not part of the treatment. Nor are Clark and Cumberland near Terra Haute, IN that are outisde MSA but not touching the boundary are not in Controls. It looks like we have achieved the right results.&lt;/p&gt;
&lt;p&gt;Now that treatment and control groups are formulated at the spatial discontinuity boundary, standard techniques will then be followed to estimate the local treatment effect.&lt;/p&gt;
&lt;p&gt;A major point to note, however, is the distinction between what is considered ‘local’ around the cutoff in RDD. In the standard case, the local is defined as a neighborhood based on the distance to the rating variable, i.e. rectangle around the cut-off. In the spatial case, the local is defined as any region that is on either side of the discontinuity (at least in this case). In some senses, Touches criterion is also a ‘distance’ metric, if we were to reimagine the regions as network nodes, where two nodes are connected by a link, if they are contigous. The network distance threshold is then 1. One could also imagine a different neighborhood around the discontinuity e.g. all regions within a k-buffer around the discontinuity, or all regions that are continguous of order 2 etc. The choice of this neighborhood is largely arbitrary and based on convention in the field.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;point-set-theory-and-the-de-9im-matrix&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Point Set Theory and the DE-9IM Matrix&lt;/h1&gt;
&lt;p&gt;Another way of doing this would be to use the function &lt;code&gt;st_relate&lt;/code&gt; in sf or &lt;code&gt;gRelate&lt;/code&gt; in &lt;code&gt;rgeos&lt;/code&gt;. These functions would give the DE-9IM relation for each pair of polygons (e.g. FF2FF1212). Then it is a matter of parsing the code to figure out which ones are exterior and which ones are interior to MSA polygons.&lt;/p&gt;
&lt;p&gt;It is useful to digress into some topology and &lt;a href=&#34;http://docs.geotools.org/stable/userguide/library/jts/dim9.html&#34;&gt;summarize the relationships and their representations&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We need concepts for interior, exterior and a boundary for various spatial types of points, lines and polygons&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Point: Everything outside the point is in the exterior, no boundary&lt;/li&gt;
&lt;li&gt;Line: All points along length is interior, boundary is the two end points and exterior is everything outside the line.&lt;/li&gt;
&lt;li&gt;polygons: Standard definitions apply (see below), however, pay attention to the holes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Relationships between polygons are described as a matrix produced by comparing the intersection of the Interior, Boundary and Exterior properties of both polygons. This comparison referred to as the Dimensionally Extended 9-Intersection Matrix or DE-9IM.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;img/twopolygons.png&#34; width=&#34;500&#34; height=&#34;500&#34; alt=&#34;&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;Image from &lt;a href=&#34;https://en.wikipedia.org/wiki/DE-9IM&#34;&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The above figure has the DE-9IM(&lt;em&gt;a&lt;/em&gt;,&lt;em&gt;b&lt;/em&gt;) string code is ‘212101212’, each character corresponding to the dimension of the intersction in the above matrix. Thus the relationship between two spatial entities can be described has string of 9 characters.&lt;/p&gt;
&lt;p&gt;Consider the following definition of Area/Area overlap:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th&gt;OVERLAP&lt;/th&gt;
&lt;th&gt;Interior&lt;/th&gt;
&lt;th&gt;Boundary&lt;/th&gt;
&lt;th&gt;Exterior&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Interior&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td&gt;Boundary&lt;/td&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td&gt;Exterior&lt;/td&gt;
&lt;td&gt;T&lt;/td&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Where T is dimension &lt;span class=&#34;math inline&#34;&gt;\(\ge\)&lt;/span&gt; 0, F is &lt;span class=&#34;math inline&#34;&gt;\(\neg\)&lt;/span&gt; T and * is any. So the binary representation for overlap is “T*T***T**”. Interpretation is that interiors of the two areas intersect, exteriors of the two areas intersect and atleast exterior of region &lt;em&gt;a&lt;/em&gt; (row) intersects with interior of region &lt;em&gt;b&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Another relevant relationship for this post is is TOUCHES, whose binary representation is “F***T****”, i.e. interiors do not intersect, but boundaries do (when &lt;em&gt;a&lt;/em&gt; and &lt;em&gt;b&lt;/em&gt; are not points).&lt;/p&gt;
&lt;p&gt;So to return to our example to get control and treatment counties we can exploit these patterns. Counties at the edge of the MSA but are within it, intersect on the interior and the boundary but the no intersection among the exterior and the boundary. Counties at the edge of MSA that are outside the MSA, have intersection of the interior of the county and exterior of the MSA, boundaries of of the MSA and counties, and no intersection between interiors.&lt;/p&gt;
&lt;p&gt;We will also exploit the feature that counties belong to a single MSA but could be exterior to multiple MSA. To account for that in the control observations, we simply exclude the observations that are already selected as treatment in the prior step.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;
msaId2 &amp;lt;- rowSums(st_relate(cty_shp, msa_IL, pattern=&amp;quot;T*F*TF***&amp;quot;, sparse = F)) &amp;gt; 0
treat_cty2 &amp;lt;- cty_shp[msaId2,] #Interiors and boundaries intersect, exteriors and interior does not and neither does boundary and exterior.
cntrl_cty2 &amp;lt;- cty_shp[rowSums(st_relate(cty_shp, msa_IL, pattern=&amp;quot;F*T*T****&amp;quot;, sparse =F)) &amp;gt; 0 &amp;amp; !msaId2,] #Interiors do not intersect, boundaries intersect, exteriors of MSA and interior of county intersects. Also ignore the ones that are already selected into treatment.
all.equal(treat_cty, treat_cty2)
# [1] TRUE
all.equal(cntrl_cty, cntrl_cty2)
# [1] TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;limitations&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Limitations&lt;/h2&gt;
&lt;p&gt;There are many limitations of RD designs and the some of those limitations translate to spatial discontinuity designs. But there are three chief limitations, we should pay attention to.&lt;/p&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;p&gt;Apriori determination/Endogeneity: It is mostly not true that the discontinuity is exogenous and determined &lt;em&gt;a priori&lt;/em&gt;. For example, the MSA boundaries are largely determined by economic activity and inclusion in an MSA is usually correlated with the variable we are seeking to observe. Thus in many situations, it will not be possible to over come these limitations. One way to validate the results is to change the spatial discontinuity (by buffering outwards and inwards for example) and see if there is an observed effect of the ‘real’ boundary.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Fuzzy boundaries and Errors: Spatial operations are notoriously susceptible to boundary errors. Just as on real line, machine tolerances and representations of numbers trip up &lt;span class=&#34;math inline&#34;&gt;\(\lt\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(=\)&lt;/span&gt; operators, errors at the boundary lines, accuracy and scale crucially determine whether the topological relations are identified or not (especially &lt;code&gt;st_relate&lt;/code&gt;). To see this issue in the example in the post, download and rerun the analysis with cartographic boundary files, e.g. using tigris download command &lt;code&gt;counties(state=&#34;IL&#34;, cb=TRUE)&lt;/code&gt; etc. One can overcome this by considering all the polygons within the bounding box or &lt;span class=&#34;math inline&#34;&gt;\(\epsilon\)&lt;/span&gt; distance between the boundaries.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Exchangeability: Exchangeability is an assumption that states that assignment of observations to the treatment condition is random, in other words, control regions could potentially be treatment regions. This is often a problem, if there are dramatic differences between regions within and outside the spatial discontinuity. For example, notice that we paid no attention to the size of the county in our analyses and if counties within MSA are smaller (on popultion, area, economic activity etc.) than outside MSA then there is a violation of exchangeability assumption. This assumption is often violated, so special attention should be paid to the descriptives.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusions&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Conclusions&lt;/h2&gt;
&lt;p&gt;All in all spatial regression discontinuity is becoming increasingly popular method to evaluate the effect of various programs, especially in a political system that is federated and the jurisdictional boundaries often serve as spatial discontinuity. While care should be paid to the analysis and the assumptions, it is a useful tool.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Identifying Employment Centers</title>
      <link>https://nkaza.github.io/post/identifying-employment-centers/</link>
      <pubDate>Wed, 04 Jul 2018 00:00:00 +0000</pubDate>
      <guid>https://nkaza.github.io/post/identifying-employment-centers/</guid>
      <description>&lt;script src=&#34;https://nkaza.github.io/post/identifying-employment-centers/index_files/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://nkaza.github.io/post/identifying-employment-centers/index_files/pymjs/pym.v1.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://nkaza.github.io/post/identifying-employment-centers/index_files/widgetframe-binding/widgetframe.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://nkaza.github.io/post/identifying-employment-centers/index_files/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://nkaza.github.io/post/identifying-employment-centers/index_files/pymjs/pym.v1.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://nkaza.github.io/post/identifying-employment-centers/index_files/widgetframe-binding/widgetframe.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://nkaza.github.io/post/identifying-employment-centers/index_files/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://nkaza.github.io/post/identifying-employment-centers/index_files/pymjs/pym.v1.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://nkaza.github.io/post/identifying-employment-centers/index_files/widgetframe-binding/widgetframe.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://nkaza.github.io/post/identifying-employment-centers/index_files/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://nkaza.github.io/post/identifying-employment-centers/index_files/pymjs/pym.v1.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://nkaza.github.io/post/identifying-employment-centers/index_files/widgetframe-binding/widgetframe.js&#34;&gt;&lt;/script&gt;
&lt;p&gt;In this post, I am going to show the techniques behind identifying centers. Centers are defined collections of contiguous high value (e.g. employment, opportunity, activity etc.) locations. This is related to, but different from using autocorrelation statistics such as Local Indicators of Spatial Autocorrelation. The methods described in this post draw from &lt;a href=&#34;https://doi.org/10.1006/juec.2001.2228&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;McMillen (2001)&lt;/a&gt; and &lt;a href=&#34;https://doi.org/10.1016/0166-0462%2891%2990032-I&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Giuliano &amp;amp; Small (1991)&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;requirements&#34;&gt;Requirements&lt;/h2&gt;
&lt;p&gt;This requires &lt;a href=&#34;http://r-project.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R&lt;/a&gt;, and many libraries including &lt;a href=&#34;https://cran.r-project.org/web/packages/igraph/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;igraph&lt;/a&gt;,&lt;a href=&#34;https://cran.r-project.org/web/packages/spdep/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;spdep&lt;/a&gt;, &lt;a href=&#34;https://cran.r-project.org/web/packages/rgdal&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;rgdal&lt;/a&gt;, &lt;a href=&#34;https://cran.r-project.org/package=tigris&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tigris&lt;/a&gt; &lt;a href=&#34;https://cran.r-project.org/package=locfit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;locfit&lt;/a&gt; and &lt;a href=&#34;https://cran.r-project.org/package=leaflet&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;leaflet&lt;/a&gt;. You should install them, as necessary, with &lt;code&gt;install.packages()&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;Most of the methods and results are discussed in &lt;a href=&#34;https://nkaza.github.io/publication/kazaedq/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hartley, Kaza &amp;amp; Lester (2016)&lt;/a&gt; and &lt;a href=&#34;https://nkaza.github.io/publication/lesterkazamcadam2018&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Lester, Kaza &amp;amp; McAdam (in review)&lt;/a&gt;. Please refer to those articles.&lt;/p&gt;
&lt;h2 id=&#34;additional-resources&#34;&gt;Additional resources&lt;/h2&gt;
&lt;p&gt;I strongly recommend that you read through some of the tutorials on using &lt;a href=&#34;http://www.nickeubank.com/gis-in-r/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;R for GIS&lt;/a&gt;. You should have &lt;a href=&#34;http://www.asdar-book.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Applied Spatial Data Analysis in R&lt;/a&gt; by Bivand et.al in your library.&lt;/p&gt;
&lt;h2 id=&#34;acquire-data&#34;&gt;Acquire data&lt;/h2&gt;
&lt;p&gt;The data I will use in this exercise will be downloaded directly from Census. For this work, we will use the Work Area Characteristics files from Local Origin Destination Employment Statistics (LODES). &lt;a href=&#34;https://lehd.ces.census.gov/data/lodes/LODES7/LODESTechDoc7.3.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LODES&lt;/a&gt; is a synthetic data set that provides, if not spatially accurate, distributionally consistent annual employment information as well as commuting information. We will restrict our attention to the Kentucky. Let’s download and set up the data.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;
library(data.table)
library(rgdal)
library(spdep)
library(rgeos)
library(igraph)
library(ggplot2)
library(tigris)
library(tidyverse)
library(sf)

state &amp;lt;- &amp;quot;ky&amp;quot;
baseurl &amp;lt;- &#39;http://lehd.ces.census.gov/data/lodes/LODES7/&#39;
years &amp;lt;- as.character(2015)
wac_file &amp;lt;- NULL
for (year in years){
  filename &amp;lt;- paste(state, &amp;quot;_wac_S000_JT00_&amp;quot;, year, &amp;quot;.csv.gz&amp;quot;, sep=&amp;quot;&amp;quot; ) #State, S000-Total Number of jobs , JT00,- All jobs
  url &amp;lt;- paste(baseurl, state, &amp;quot;/wac/&amp;quot;, filename, sep=&amp;quot;&amp;quot; )
  if(!file.exists(filename)){download.file(url, filename, mode=&#39;wb&#39;)}
  wac_file[[year]] &amp;lt;- data.table(read.csv(filename, colClasses = c(&#39;character&#39;, rep(&#39;integer&#39;,51), &#39;character&#39;))) ##based on the documentation of the classes
wac_file &amp;lt;- rbindlist(wac_file, idcol=&amp;quot;Year&amp;quot;, use.names = TRUE)
}

ky_tr &amp;lt;- tracts(&amp;quot;Kentucky&amp;quot;, year=2010, progress_bar =FALSE)
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    I am using &lt;code&gt;read.csv&lt;/code&gt; only because I am using a much faster &lt;code&gt;data.table&lt;/code&gt; package for illustration purposes. The code can be easily adapted to &lt;code&gt;tibbles&lt;/code&gt; using &lt;code&gt;read_csv&lt;/code&gt;.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;data-preparation--exploration&#34;&gt;Data preparation &amp;amp; exploration&lt;/h2&gt;
&lt;p&gt;The data set is at a block level. This level of geography is far too fine (28,996 blocks) for our analyses. Lets aggregate it up to census tracts. Since blocks are nested within the tract, all we need to do is to trim the GEOID and aggregate the data.table to the trimmed GEOID.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;wac_file$w_geocode_tr &amp;lt;- substr(wac_file$w_geocode, 1,11) #trim GEOID to 11. Trim it to 12 if Blockgroups are needed
setkey(wac_file, w_geocode_tr, Year)
cols = sapply(wac_file, is.numeric)  #identify the columns where summation can be applied.
cols = names(cols)[cols]
wac_file_tr &amp;lt;- wac_file[,lapply(.SD, sum), .SDcols = cols, by=list(w_geocode_tr, Year)] # Aggregate the columns to tract ids.

#C000 is the column that contains the numbers for total jobs.
summary(wac_file_tr$C000)
#    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
#     1.0   250.5   763.5  1646.8  1950.5 57291.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We have now a manageable number of geographic units (1,112 tracts). The summary statistics look pretty skewed. It is useful to visualise the inequality of the distribution. We can use Lorenz curve for this. We need the &lt;code&gt;ineq&lt;/code&gt; package for this.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(ineq)
 plot(Lc(wac_file_tr$C000), xlab=&amp;quot;Cumulative % of tracts&amp;quot;, ylab=&amp;quot;Cumulative % of Jobs&amp;quot;)
 abline(v =.5, lty=2, col=&#39;blue&#39;)
 abline(h=.09, lty=2, col=&#39;blue&#39;)
 abline(v=.9, lty=2, col=&#39;red&#39;)
 abline(h=.53, lty=2, col=&#39;red&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://nkaza.github.io/post/identifying-employment-centers/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;768&#34; /&gt;
The bottom 50% of the tracts only contribute to less than 10% of the total employment, while the top 10% of the tracts contribute to more than 45% of employment. About 11% of tracts have less than 100 jobs. This shows that jobs are pretty well concentrated in particular centers.
&lt;p&gt;We can visualise the spatial distribution of jobs. We already used &lt;code&gt;tigris&lt;/code&gt; to download and load the polygons, and &lt;code&gt;leaflet&lt;/code&gt; to visualise the information. Tigris is a convenience package that automatically downloads TIGER files from Census for particular geography. Visualising complicated geography is problematic, so we will use a polygon simplifier &lt;a href=&#34;https://bost.ocks.org/mike/simplify/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Visvasalingam algorithm&lt;/a&gt; to simplify the boundaries. As long as the topology is preserved, we don’t loose much for this analysis.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;
##Simplify shape for display and analysis. As long as the topology is preserved, complicated boundaries are not necessary for this purpose.
library(rmapshaper)
ky_tr_simple &amp;lt;- rmapshaper::ms_simplify(ky_tr)
c(object.size(ky_tr), object.size(ky_tr_simple))
# [1] 20041168  2299040
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Merge the spatial polygons with the WAC file.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ky_tr_simple &amp;lt;-  ky_tr_simple %&amp;gt;% 
                  left_join(wac_file_tr[Year==year, .(w_geocode_tr, C000),], by = c(&amp;quot;GEOID10&amp;quot;=&amp;quot;w_geocode_tr&amp;quot;))

ky_tr_simple$C000[is.na(ky_tr_simple$C000)] &amp;lt;- 0 #set NAs to 0. This may not be kosher depending on your application.
ky_tr_simple$empdens &amp;lt;- ky_tr_simple$C000/(ky_tr_simple$ALAND10) * 10^4 #Jobs per ha. ALAND10 is in sq.m
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;visualising-spatial-data&#34;&gt;Visualising spatial data&lt;/h2&gt;
&lt;p&gt;Let us visualise the spatial distribution of employment. Note the use of Quintile colour cuts. There may be other cuts that are more preferable.&lt;/p&gt;
&lt;div class=&#34;alert alert-warning&#34;&gt;
  &lt;div&gt;
    The Leaflet package expects all point, line, and shape data to be specified in latitude and longitude using WGS 84 (a.k.a. EPSG:4326). By default, when displaying this data it projects everything to EPSG:3857 and expects that any map tiles are also displayed in EPSG:3857. Other projections are not fully supported. It turns out that Census files are in that coordinate system, however, you may have to pay attention To the projections, when using your own polygon files. See &lt;a href=&#34;https://rstudio.github.io/leaflet/projections.html&#34;&gt;https://rstudio.github.io/leaflet/projections.html&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(leaflet)

ky_tr_simple &amp;lt;- ky_tr_simple %&amp;gt;% sf::st_transform(4326)

m &amp;lt;-  leaflet(ky_tr_simple) %&amp;gt;%
  addProviderTiles(providers$Stamen.TonerLines, group = &amp;quot;Basemap&amp;quot;,
                   options = providerTileOptions(minZoom = 7, maxZoom = 11)) %&amp;gt;%
   addProviderTiles(providers$Stamen.TonerLite, group = &amp;quot;Basemap&amp;quot;,
                    options = providerTileOptions(minZoom = 7, maxZoom = 11)) 
 

Qpal &amp;lt;- colorQuantile(
  palette = &amp;quot;BuPu&amp;quot;, n = 7,
  domain = ky_tr_simple$C000
)


labels &amp;lt;- sprintf(
  &amp;quot;Tract #: %s &amp;lt;br/&amp;gt; Jobs: &amp;lt;strong&amp;gt;%s&amp;lt;/strong&amp;gt;&amp;quot;,
  ky_tr_simple$GEOID10, ky_tr_simple$C000
) %&amp;gt;% lapply(htmltools::HTML)

  
m2 &amp;lt;- m %&amp;gt;%
     addPolygons(color = &amp;quot;#CBC7C6&amp;quot;, weight = 1, smoothFactor = 0.5,
              opacity = 1.0, fillOpacity = 0.5,
             fillColor = Qpal(ky_tr_simple$C000),
              highlightOptions = highlightOptions(color = &amp;quot;white&amp;quot;, weight = 2, bringToFront = TRUE),
             label = labels,
             labelOptions = labelOptions(
               style = list(&amp;quot;font-weight&amp;quot; = &amp;quot;normal&amp;quot;, padding = &amp;quot;3px 8px&amp;quot;),
               textsize = &amp;quot;15px&amp;quot;,
               direction = &amp;quot;auto&amp;quot;),
             group = &amp;quot;Tracts&amp;quot;
             ) %&amp;gt;%
   addLegend(&amp;quot;topleft&amp;quot;, pal = Qpal, values = ~C000,
             labFormat = function(type, cuts, p) {
               n = length(cuts) 
             paste0(prettyNum(cuts[-n], digits=1, big.mark = &amp;quot;,&amp;quot;, scientific=F), &amp;quot; - &amp;quot;, prettyNum(cuts[-1], digits=1, big.mark=&amp;quot;,&amp;quot;, scientific=F))
             },
             title = &amp;quot;Number of Jobs&amp;quot;,
             opacity = 1
   ) %&amp;gt;%
  addLayersControl(
    overlayGroups = c(&amp;quot;Tracts&amp;quot;, &#39;Basemap&#39;),
    options = layersControlOptions(collapsed = FALSE)
      )

library(widgetframe) 
frameWidget(m2)
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:100%;height:480px;&#34; class=&#34;widgetframe html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;url&#34;:&#34;index_files/figure-html//widgets/widget_unnamed-chunk-6.html&#34;,&#34;options&#34;:{&#34;xdomain&#34;:&#34;*&#34;,&#34;allowfullscreen&#34;:false,&#34;lazyload&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;The problem with choropleth maps is that large spatial areas visually draw attention and skew the perception of the map. See for example, the small tracts in Louisville compared to rural tracts around Bradstown. One way to deal with this issue, is to intensify the color of smaller tracts by normalising employment with some variable (area or per capita) to visualise the spatial distribution better. Sometimes, it is also better to ignore the boundaries. It does not get solve the problem completely.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;
Qpal &amp;lt;- colorQuantile(
  palette = &amp;quot;BuPu&amp;quot;, n = 5,
  domain = ky_tr_simple$empdens
)


labels &amp;lt;- sprintf(
  &amp;quot;Tract #: %s &amp;lt;br/&amp;gt; Job Density: &amp;lt;strong&amp;gt;%s&amp;lt;/strong&amp;gt;&amp;quot;,
  ky_tr_simple$GEOID10, prettyNum(ky_tr_simple$empdens, digits=2, big.mark = &amp;quot;,&amp;quot;)
) %&amp;gt;% lapply(htmltools::HTML)

  
m2 &amp;lt;- m %&amp;gt;%
     addPolygons(color = &amp;quot;#CBC7C6&amp;quot;, weight = 0, smoothFactor = 0.5,
              opacity = 1.0, fillOpacity = 0.5,
             fillColor = Qpal(ky_tr_simple$empdens),
              highlightOptions = highlightOptions(color = &amp;quot;white&amp;quot;, weight = 2, bringToFront = TRUE),
             label = labels,
             labelOptions = labelOptions(
               style = list(&amp;quot;font-weight&amp;quot; = &amp;quot;normal&amp;quot;, padding = &amp;quot;3px 8px&amp;quot;),
               textsize = &amp;quot;15px&amp;quot;,
               direction = &amp;quot;auto&amp;quot;),
             group = &amp;quot;Tracts&amp;quot;
             ) %&amp;gt;%
   addLegend(&amp;quot;topleft&amp;quot;, pal = Qpal, values = ~empdens,
             labFormat = function(type, cuts, p) {
               n = length(cuts) 
             paste0(prettyNum(cuts[-n], digits=2, big.mark = &amp;quot;,&amp;quot;, scientific=F), &amp;quot; - &amp;quot;, prettyNum(cuts[-1], digits=2, big.mark=&amp;quot;,&amp;quot;, scientific=F))
             },
             title = &amp;quot;Employment Density per ha&amp;quot;,
             opacity = 1
   ) %&amp;gt;%
  addLayersControl(
    overlayGroups = c(&amp;quot;Tracts&amp;quot;, &#39;Basemap&#39;),
    options = layersControlOptions(collapsed = FALSE)
      )
 
frameWidget(m2)
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-2&#34; style=&#34;width:100%;height:480px;&#34; class=&#34;widgetframe html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-2&#34;&gt;{&#34;x&#34;:{&#34;url&#34;:&#34;index_files/figure-html//widgets/widget_unnamed-chunk-7.html&#34;,&#34;options&#34;:{&#34;xdomain&#34;:&#34;*&#34;,&#34;allowfullscreen&#34;:false,&#34;lazyload&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;h2 id=&#34;employment-center-definitions&#34;&gt;Employment center definitions&lt;/h2&gt;
&lt;p&gt;What counts as an employment center depends on what definition you use. Giuliano &amp;amp; Small use a density floor (~25 jobs per ha) and floor on the total jobs ( at least 10,000 jobs). i.e. an employment center is defined as collection of contiguous geographies whose sum total of employment is more than 10,000 and whose density is more than 25 jobs per ha. Notice that these cutoffs are arbitrary and different values give different results. In this post, I am not going to use this definition, though the code is below.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;subgs &amp;lt;-function(shpfile,dens,emp,mind=25,totemp=10000, wmat=0) {
  if (identical(wmat,0)) {
    neighbors &amp;lt;- poly2nb(shpfile,queen=TRUE)
    wmat &amp;lt;- nb2mat(neighbors,style=&amp;quot;B&amp;quot;,zero.policy=TRUE)
  }
  dens &amp;lt;- ifelse(is.na(dens),0,dens)
  obs &amp;lt;- seq(1:length(dens))
  densobs &amp;lt;- obs[dens&amp;gt;mind]
  wmat &amp;lt;- wmat[densobs,densobs]
  n = nrow(wmat)
  amat &amp;lt;- matrix(0,nrow=n,ncol=n)
  amat[row(amat)==col(amat)] &amp;lt;- 1
  bmat &amp;lt;- wmat
  wmat1 &amp;lt;- wmat
  newnum = sum(bmat)
  cnt = 1
  while (newnum&amp;gt;0) {
    amat &amp;lt;- amat+bmat
    wmat2 &amp;lt;- wmat1%*%wmat
    bmat &amp;lt;- ifelse(wmat2&amp;gt;0&amp;amp;amat==0,1,0)
    wmat1 &amp;lt;- wmat2
    newnum = sum(bmat)
    cnt = cnt+1
  }
  emat &amp;lt;- emp[dens&amp;gt;mind]
  tmat &amp;lt;- amat%*%emat
  obsmat &amp;lt;- densobs[tmat&amp;gt;totemp]
  
  subemp &amp;lt;- array(0,dim=length(dens))
  subemp[obsmat] &amp;lt;- tmat[tmat&amp;gt;totemp]
  subobs &amp;lt;- ifelse(subemp&amp;gt;0,1,0)
  
  tab &amp;lt;- tabulate(factor(subemp))
  numsub = sum(tab&amp;gt;0)-1
  
  cat(&amp;quot;Number of Subcenters = &amp;quot;,numsub,&amp;quot;\n&amp;quot;)
  cat(&amp;quot;Total Employment and Number of Tracts in each Subcenter&amp;quot;,&amp;quot;\n&amp;quot;)
  print(table(subemp))
  
  out &amp;lt;- list(subemp,subobs)
  names(out) &amp;lt;- c(&amp;quot;subemp&amp;quot;,&amp;quot;subobs&amp;quot;)
  return(out)
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;McMillen, on the other hand, uses a non-parametric method. He fits a employment density surface based on local neighborhood values and predicts the employment density at a location. If the actual employment density is &lt;em&gt;substanially higher&lt;/em&gt; than predicted values then the tract is labelled an employment center. Note the choice of the parameters, &lt;code&gt;window&lt;/code&gt;, (observations that are defined as neighborhood) and the &lt;code&gt;pval&lt;/code&gt; (statistical significance). They are as arbitrary as Giuliano and Small’s parameters, but are more widely accepted.&lt;/p&gt;
&lt;p&gt;In the later part, we will merge such contiguous tracts. For this section we use &lt;code&gt;locfit&lt;/code&gt; package&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(locfit)
 #### This is the McMillen&#39;s method for determining the tracts that are significantly different from the neighbours. 
 subnp &amp;lt;- function(ydens,long,lat,window=.5,pval=.10) {
   data &amp;lt;- data.frame(ydens,long,lat)
   names(data) &amp;lt;- c(&amp;quot;ydens&amp;quot;,&amp;quot;long&amp;quot;,&amp;quot;lat&amp;quot;)
   fit &amp;lt;- locfit(ydens~lp(long,lat,nn=window,deg=1),kern=&amp;quot;tcub&amp;quot;,ev=dat(cv=FALSE),data=data)
   mat &amp;lt;- predict(fit,se.fit=TRUE,band=&amp;quot;pred&amp;quot;)
   yhat &amp;lt;- mat$fit
   sehat &amp;lt;- mat$se.fit
   upper &amp;lt;- yhat - qnorm(pval/2)*sehat
   subobs &amp;lt;- ifelse(ydens&amp;gt;upper,1,0)
   
   cat(&amp;quot;Number of tracts identified as part of subcenters:  &amp;quot;,sum(subobs),&amp;quot;\n&amp;quot;)
   out &amp;lt;- list(subobs)
   names(out) &amp;lt;- c(&amp;quot;subobs&amp;quot;)
   return(out)
 }

temp &amp;lt;-  subnp(ky_tr_simple$empdens, ky_tr_simple$INTPTLON10, ky_tr_simple$INTPTLAT10)
# Number of tracts identified as part of subcenters:   23
ky_tr_simple$empcenter &amp;lt;- temp$subobs
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;visualise-the-results&#34;&gt;Visualise the results&lt;/h2&gt;
&lt;p&gt;We use the same code as before, except styling the colors using &lt;code&gt;colorFactor&lt;/code&gt; instead of &lt;code&gt;colorQuantile&lt;/code&gt; to visualise the outputs.&lt;/p&gt;
&lt;div id=&#34;htmlwidget-3&#34; style=&#34;width:100%;height:480px;&#34; class=&#34;widgetframe html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-3&#34;&gt;{&#34;x&#34;:{&#34;url&#34;:&#34;index_files/figure-html//widgets/widget_unnamed-chunk-10.html&#34;,&#34;options&#34;:{&#34;xdomain&#34;:&#34;*&#34;,&#34;allowfullscreen&#34;:false,&#34;lazyload&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;h2 id=&#34;merge-contiguous-tracts-and-aggregate-values&#34;&gt;Merge contiguous tracts and aggregate values&lt;/h2&gt;
&lt;p&gt;One of the neat tricks that &lt;code&gt;spdep&lt;/code&gt; package allows us to do is to construct a graph from spatial adjacency matrix. Once a graph is created, it is simply a matter of finding the connected components of the graph and then merging based on the component name.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ky_empc_tr &amp;lt;- ky_tr_simple[ky_tr_simple$empcenter==1,]

g &amp;lt;- ky_empc_tr %&amp;gt;% as(&amp;quot;Spatial&amp;quot;) %&amp;gt;%
  spdep::poly2nb(queen=T, row.names=ky_empc_tr$GEOID10) %&amp;gt;%
  spdep::nb2mat(zero.policy=TRUE, style=&amp;quot;B&amp;quot;) %&amp;gt;%
  igraph::graph_from_adjacency_matrix(mode=&#39;undirected&#39;, add.rownames=&amp;quot;NULL&amp;quot;)

ky_empc_tr$clustermember &amp;lt;- paste0(&amp;quot;C&amp;quot;,igraph::components(g)$membership)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Dissolving polygons is a breeze due to &lt;code&gt;sf&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ky_empc_pt &amp;lt;- 
    ky_empc_tr %&amp;gt;% 
      group_by(clustermember) %&amp;gt;%
      summarise(emp = sum(C000), area = sum(ALAND10)) %&amp;gt;%
      mutate(empdens = emp/area *10^4) %&amp;gt;% 
      st_centroid %&amp;gt;%
      st_as_sf()
# Warning in st_centroid.sf(.): st_centroid assumes attributes are constant over
# geometries of x
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We went from 23 tracts to 14 centers due to this merging. Final visualisation could be done using markers, instead of a choropleth plot. The tracts are used for visualisation, only to show the extent.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;labels2 &amp;lt;- sprintf(
  &amp;quot;Employment Cluster #: %s &amp;lt;br/&amp;gt; Jobs: &amp;lt;strong&amp;gt;%s&amp;lt;/strong&amp;gt;, Density: &amp;lt;strong&amp;gt;%s per ha&amp;lt;/strong&amp;gt;&amp;quot;,
  ky_empc_pt$clustermember, prettyNum(ky_empc_pt$emp, big.mark = &amp;quot;,&amp;quot;, scientific=F), prettyNum(ky_empc_pt$empdens, digits=2)
) %&amp;gt;% lapply(htmltools::HTML)




m4 &amp;lt;- leaflet(ky_empc_pt) %&amp;gt;%
  addTiles() %&amp;gt;%
  addPolygons(data= ky_empc_tr, weight = 0,fillOpacity = 0.5, fillColor = &#39;red&#39; ) %&amp;gt;%
  addMarkers(label = ~labels2, 
             labelOptions = labelOptions(
               style = list(&amp;quot;font-weight&amp;quot; = &amp;quot;normal&amp;quot;, padding = &amp;quot;3px 8px&amp;quot;),
               textsize = &amp;quot;15px&amp;quot;,
               direction = &amp;quot;auto&amp;quot;))

frameWidget(m4)
&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-4&#34; style=&#34;width:100%;height:480px;&#34; class=&#34;widgetframe html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-4&#34;&gt;{&#34;x&#34;:{&#34;url&#34;:&#34;index_files/figure-html//widgets/widget_unnamed-chunk-13.html&#34;,&#34;options&#34;:{&#34;xdomain&#34;:&#34;*&#34;,&#34;allowfullscreen&#34;:false,&#34;lazyload&#34;:false}},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;h2 id=&#34;further-explorations&#34;&gt;Further explorations&lt;/h2&gt;
&lt;p&gt;Many improvements and extensions are possible. For example,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In this post, I only used 2015 employment. But the code is set up to download and run for multiple years with suitable modifications. Have the employment center locations and characteristics changed between 2002 and 2015?&lt;/li&gt;
&lt;li&gt;It turns out KY has only 14 employment centers through out the state. How does KY fare compared to rest of the US?&lt;/li&gt;
&lt;li&gt;These centers (23 tracts) only account for 12.95% of the state employment. Yet we saw from the Lorenz cure that that the top 10% (~111 tracts ) have about 45% of employment. So what is happening with the other 88 tracts? Are they dispersed? clustered? Why did not they show up?&lt;/li&gt;
&lt;li&gt;Based on the above, what improvements can we make to McMillen method?&lt;/li&gt;
&lt;li&gt;What are the outcomes if we use Giuliano and Small’s method?&lt;/li&gt;
&lt;li&gt;What are the impacts of different parameters on identification?&lt;/li&gt;
&lt;li&gt;What is the impact of spatial scale? In this analyses we used Census tracts. Are results dramatically different, if we use block groups or blocks?&lt;/li&gt;
&lt;li&gt;Is total employment even a relevant indicator for employment centers? Should we be identifying specialised employment centers by industry or occupation?&lt;/li&gt;
&lt;li&gt;How can be adapt this method to identify other concentrated activities (such as retail etc.)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;accomplishments&#34;&gt;Accomplishments&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Downloading and reading vector data&lt;/li&gt;
&lt;li&gt;Vector data operations (Union, neighbors)&lt;/li&gt;
&lt;li&gt;Visualising spatial data with leaflet&lt;/li&gt;
&lt;li&gt;Switching between spatial and network conceptual frames&lt;/li&gt;
&lt;li&gt;Local regression with spatial coordinates&lt;/li&gt;
&lt;li&gt;Spatial outlier detection&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
